{-
   Netatmo

   <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 

   OpenAPI Version: 3.0.1
   Netatmo API version: 1.1.3
   Contact: contact-api@netatmo.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Netatmo.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Netatmo.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Netatmo.Model
import Netatmo.Core


-- * NADashboardData

-- | 'nADashboardDataTimeUtc' Lens
nADashboardDataTimeUtcL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataTimeUtcL f NADashboardData{..} = (\nADashboardDataTimeUtc -> NADashboardData { nADashboardDataTimeUtc, ..} ) <$> f nADashboardDataTimeUtc
{-# INLINE nADashboardDataTimeUtcL #-}

-- | 'nADashboardDataDeviceId' Lens
nADashboardDataDeviceIdL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataDeviceIdL f NADashboardData{..} = (\nADashboardDataDeviceId -> NADashboardData { nADashboardDataDeviceId, ..} ) <$> f nADashboardDataDeviceId
{-# INLINE nADashboardDataDeviceIdL #-}

-- | 'nADashboardDataBoilerOn' Lens
nADashboardDataBoilerOnL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataBoilerOnL f NADashboardData{..} = (\nADashboardDataBoilerOn -> NADashboardData { nADashboardDataBoilerOn, ..} ) <$> f nADashboardDataBoilerOn
{-# INLINE nADashboardDataBoilerOnL #-}

-- | 'nADashboardDataBoilerOff' Lens
nADashboardDataBoilerOffL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataBoilerOffL f NADashboardData{..} = (\nADashboardDataBoilerOff -> NADashboardData { nADashboardDataBoilerOff, ..} ) <$> f nADashboardDataBoilerOff
{-# INLINE nADashboardDataBoilerOffL #-}

-- | 'nADashboardDataTemperature' Lens
nADashboardDataTemperatureL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataTemperatureL f NADashboardData{..} = (\nADashboardDataTemperature -> NADashboardData { nADashboardDataTemperature, ..} ) <$> f nADashboardDataTemperature
{-# INLINE nADashboardDataTemperatureL #-}

-- | 'nADashboardDataTempTrend' Lens
nADashboardDataTempTrendL :: Lens_' NADashboardData (Maybe Text)
nADashboardDataTempTrendL f NADashboardData{..} = (\nADashboardDataTempTrend -> NADashboardData { nADashboardDataTempTrend, ..} ) <$> f nADashboardDataTempTrend
{-# INLINE nADashboardDataTempTrendL #-}

-- | 'nADashboardDataDateMaxTemp' Lens
nADashboardDataDateMaxTempL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataDateMaxTempL f NADashboardData{..} = (\nADashboardDataDateMaxTemp -> NADashboardData { nADashboardDataDateMaxTemp, ..} ) <$> f nADashboardDataDateMaxTemp
{-# INLINE nADashboardDataDateMaxTempL #-}

-- | 'nADashboardDataDateMinTemp' Lens
nADashboardDataDateMinTempL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataDateMinTempL f NADashboardData{..} = (\nADashboardDataDateMinTemp -> NADashboardData { nADashboardDataDateMinTemp, ..} ) <$> f nADashboardDataDateMinTemp
{-# INLINE nADashboardDataDateMinTempL #-}

-- | 'nADashboardDataMinTemp' Lens
nADashboardDataMinTempL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataMinTempL f NADashboardData{..} = (\nADashboardDataMinTemp -> NADashboardData { nADashboardDataMinTemp, ..} ) <$> f nADashboardDataMinTemp
{-# INLINE nADashboardDataMinTempL #-}

-- | 'nADashboardDataMaxTemp' Lens
nADashboardDataMaxTempL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataMaxTempL f NADashboardData{..} = (\nADashboardDataMaxTemp -> NADashboardData { nADashboardDataMaxTemp, ..} ) <$> f nADashboardDataMaxTemp
{-# INLINE nADashboardDataMaxTempL #-}

-- | 'nADashboardDataAbsolutePressure' Lens
nADashboardDataAbsolutePressureL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataAbsolutePressureL f NADashboardData{..} = (\nADashboardDataAbsolutePressure -> NADashboardData { nADashboardDataAbsolutePressure, ..} ) <$> f nADashboardDataAbsolutePressure
{-# INLINE nADashboardDataAbsolutePressureL #-}

-- | 'nADashboardDataCo2' Lens
nADashboardDataCo2L :: Lens_' NADashboardData (Maybe Float)
nADashboardDataCo2L f NADashboardData{..} = (\nADashboardDataCo2 -> NADashboardData { nADashboardDataCo2, ..} ) <$> f nADashboardDataCo2
{-# INLINE nADashboardDataCo2L #-}

-- | 'nADashboardDataHumidity' Lens
nADashboardDataHumidityL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataHumidityL f NADashboardData{..} = (\nADashboardDataHumidity -> NADashboardData { nADashboardDataHumidity, ..} ) <$> f nADashboardDataHumidity
{-# INLINE nADashboardDataHumidityL #-}

-- | 'nADashboardDataNoise' Lens
nADashboardDataNoiseL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataNoiseL f NADashboardData{..} = (\nADashboardDataNoise -> NADashboardData { nADashboardDataNoise, ..} ) <$> f nADashboardDataNoise
{-# INLINE nADashboardDataNoiseL #-}

-- | 'nADashboardDataPressure' Lens
nADashboardDataPressureL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataPressureL f NADashboardData{..} = (\nADashboardDataPressure -> NADashboardData { nADashboardDataPressure, ..} ) <$> f nADashboardDataPressure
{-# INLINE nADashboardDataPressureL #-}

-- | 'nADashboardDataPressureTrend' Lens
nADashboardDataPressureTrendL :: Lens_' NADashboardData (Maybe Text)
nADashboardDataPressureTrendL f NADashboardData{..} = (\nADashboardDataPressureTrend -> NADashboardData { nADashboardDataPressureTrend, ..} ) <$> f nADashboardDataPressureTrend
{-# INLINE nADashboardDataPressureTrendL #-}

-- | 'nADashboardDataRain' Lens
nADashboardDataRainL :: Lens_' NADashboardData (Maybe Float)
nADashboardDataRainL f NADashboardData{..} = (\nADashboardDataRain -> NADashboardData { nADashboardDataRain, ..} ) <$> f nADashboardDataRain
{-# INLINE nADashboardDataRainL #-}

-- | 'nADashboardDataSumRain1' Lens
nADashboardDataSumRain1L :: Lens_' NADashboardData (Maybe Float)
nADashboardDataSumRain1L f NADashboardData{..} = (\nADashboardDataSumRain1 -> NADashboardData { nADashboardDataSumRain1, ..} ) <$> f nADashboardDataSumRain1
{-# INLINE nADashboardDataSumRain1L #-}

-- | 'nADashboardDataSumRain24' Lens
nADashboardDataSumRain24L :: Lens_' NADashboardData (Maybe Float)
nADashboardDataSumRain24L f NADashboardData{..} = (\nADashboardDataSumRain24 -> NADashboardData { nADashboardDataSumRain24, ..} ) <$> f nADashboardDataSumRain24
{-# INLINE nADashboardDataSumRain24L #-}

-- | 'nADashboardDataWindAngle' Lens
nADashboardDataWindAngleL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataWindAngleL f NADashboardData{..} = (\nADashboardDataWindAngle -> NADashboardData { nADashboardDataWindAngle, ..} ) <$> f nADashboardDataWindAngle
{-# INLINE nADashboardDataWindAngleL #-}

-- | 'nADashboardDataGustAngle' Lens
nADashboardDataGustAngleL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataGustAngleL f NADashboardData{..} = (\nADashboardDataGustAngle -> NADashboardData { nADashboardDataGustAngle, ..} ) <$> f nADashboardDataGustAngle
{-# INLINE nADashboardDataGustAngleL #-}

-- | 'nADashboardDataWindStrength' Lens
nADashboardDataWindStrengthL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataWindStrengthL f NADashboardData{..} = (\nADashboardDataWindStrength -> NADashboardData { nADashboardDataWindStrength, ..} ) <$> f nADashboardDataWindStrength
{-# INLINE nADashboardDataWindStrengthL #-}

-- | 'nADashboardDataMaxWindStr' Lens
nADashboardDataMaxWindStrL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataMaxWindStrL f NADashboardData{..} = (\nADashboardDataMaxWindStr -> NADashboardData { nADashboardDataMaxWindStr, ..} ) <$> f nADashboardDataMaxWindStr
{-# INLINE nADashboardDataMaxWindStrL #-}

-- | 'nADashboardDataDateMaxWindStr' Lens
nADashboardDataDateMaxWindStrL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataDateMaxWindStrL f NADashboardData{..} = (\nADashboardDataDateMaxWindStr -> NADashboardData { nADashboardDataDateMaxWindStr, ..} ) <$> f nADashboardDataDateMaxWindStr
{-# INLINE nADashboardDataDateMaxWindStrL #-}

-- | 'nADashboardDataGustStrength' Lens
nADashboardDataGustStrengthL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataGustStrengthL f NADashboardData{..} = (\nADashboardDataGustStrength -> NADashboardData { nADashboardDataGustStrength, ..} ) <$> f nADashboardDataGustStrength
{-# INLINE nADashboardDataGustStrengthL #-}

-- | 'nADashboardDataHealthIdx' Lens
nADashboardDataHealthIdxL :: Lens_' NADashboardData (Maybe Int)
nADashboardDataHealthIdxL f NADashboardData{..} = (\nADashboardDataHealthIdx -> NADashboardData { nADashboardDataHealthIdx, ..} ) <$> f nADashboardDataHealthIdx
{-# INLINE nADashboardDataHealthIdxL #-}



-- * NADate

-- | 'nADateSec' Lens
nADateSecL :: Lens_' NADate (Maybe Int)
nADateSecL f NADate{..} = (\nADateSec -> NADate { nADateSec, ..} ) <$> f nADateSec
{-# INLINE nADateSecL #-}

-- | 'nADateUsec' Lens
nADateUsecL :: Lens_' NADate (Maybe Int)
nADateUsecL f NADate{..} = (\nADateUsec -> NADate { nADateUsec, ..} ) <$> f nADateUsec
{-# INLINE nADateUsecL #-}



-- * NADevice

-- | 'nADeviceId' Lens
nADeviceIdL :: Lens_' NADevice (Maybe Text)
nADeviceIdL f NADevice{..} = (\nADeviceId -> NADevice { nADeviceId, ..} ) <$> f nADeviceId
{-# INLINE nADeviceIdL #-}

-- | 'nADeviceBehavior' Lens
nADeviceBehaviorL :: Lens_' NADevice (Maybe Int)
nADeviceBehaviorL f NADevice{..} = (\nADeviceBehavior -> NADevice { nADeviceBehavior, ..} ) <$> f nADeviceBehavior
{-# INLINE nADeviceBehaviorL #-}

-- | 'nADeviceCipherId' Lens
nADeviceCipherIdL :: Lens_' NADevice (Maybe Text)
nADeviceCipherIdL f NADevice{..} = (\nADeviceCipherId -> NADevice { nADeviceCipherId, ..} ) <$> f nADeviceCipherId
{-# INLINE nADeviceCipherIdL #-}

-- | 'nADeviceDateSetup' Lens
nADeviceDateSetupL :: Lens_' NADevice (Maybe NADate)
nADeviceDateSetupL f NADevice{..} = (\nADeviceDateSetup -> NADevice { nADeviceDateSetup, ..} ) <$> f nADeviceDateSetup
{-# INLINE nADeviceDateSetupL #-}

-- | 'nADeviceFirmware' Lens
nADeviceFirmwareL :: Lens_' NADevice (Maybe Int)
nADeviceFirmwareL f NADevice{..} = (\nADeviceFirmware -> NADevice { nADeviceFirmware, ..} ) <$> f nADeviceFirmware
{-# INLINE nADeviceFirmwareL #-}

-- | 'nADeviceHwVersion' Lens
nADeviceHwVersionL :: Lens_' NADevice (Maybe Int)
nADeviceHwVersionL f NADevice{..} = (\nADeviceHwVersion -> NADevice { nADeviceHwVersion, ..} ) <$> f nADeviceHwVersion
{-# INLINE nADeviceHwVersionL #-}

-- | 'nADeviceHeatingSystem' Lens
nADeviceHeatingSystemL :: Lens_' NADevice (Maybe NAHeatingSystem)
nADeviceHeatingSystemL f NADevice{..} = (\nADeviceHeatingSystem -> NADevice { nADeviceHeatingSystem, ..} ) <$> f nADeviceHeatingSystem
{-# INLINE nADeviceHeatingSystemL #-}

-- | 'nADeviceHouseModel' Lens
nADeviceHouseModelL :: Lens_' NADevice (Maybe NAHouseModel)
nADeviceHouseModelL f NADevice{..} = (\nADeviceHouseModel -> NADevice { nADeviceHouseModel, ..} ) <$> f nADeviceHouseModel
{-# INLINE nADeviceHouseModelL #-}

-- | 'nADeviceIp' Lens
nADeviceIpL :: Lens_' NADevice (Maybe Text)
nADeviceIpL f NADevice{..} = (\nADeviceIp -> NADevice { nADeviceIp, ..} ) <$> f nADeviceIp
{-# INLINE nADeviceIpL #-}

-- | 'nADeviceLastFwUpdate' Lens
nADeviceLastFwUpdateL :: Lens_' NADevice (Maybe Int)
nADeviceLastFwUpdateL f NADevice{..} = (\nADeviceLastFwUpdate -> NADevice { nADeviceLastFwUpdate, ..} ) <$> f nADeviceLastFwUpdate
{-# INLINE nADeviceLastFwUpdateL #-}

-- | 'nADeviceLastRadioStore' Lens
nADeviceLastRadioStoreL :: Lens_' NADevice (Maybe Int)
nADeviceLastRadioStoreL f NADevice{..} = (\nADeviceLastRadioStore -> NADevice { nADeviceLastRadioStore, ..} ) <$> f nADeviceLastRadioStore
{-# INLINE nADeviceLastRadioStoreL #-}

-- | 'nADeviceLastStatusStore' Lens
nADeviceLastStatusStoreL :: Lens_' NADevice (Maybe Int)
nADeviceLastStatusStoreL f NADevice{..} = (\nADeviceLastStatusStore -> NADevice { nADeviceLastStatusStore, ..} ) <$> f nADeviceLastStatusStore
{-# INLINE nADeviceLastStatusStoreL #-}

-- | 'nADeviceLastUpgrade' Lens
nADeviceLastUpgradeL :: Lens_' NADevice (Maybe Int)
nADeviceLastUpgradeL f NADevice{..} = (\nADeviceLastUpgrade -> NADevice { nADeviceLastUpgrade, ..} ) <$> f nADeviceLastUpgrade
{-# INLINE nADeviceLastUpgradeL #-}

-- | 'nADeviceModuleName' Lens
nADeviceModuleNameL :: Lens_' NADevice (Maybe Text)
nADeviceModuleNameL f NADevice{..} = (\nADeviceModuleName -> NADevice { nADeviceModuleName, ..} ) <$> f nADeviceModuleName
{-# INLINE nADeviceModuleNameL #-}

-- | 'nADeviceModules' Lens
nADeviceModulesL :: Lens_' NADevice (Maybe [Text])
nADeviceModulesL f NADevice{..} = (\nADeviceModules -> NADevice { nADeviceModules, ..} ) <$> f nADeviceModules
{-# INLINE nADeviceModulesL #-}

-- | 'nADevicePlace' Lens
nADevicePlaceL :: Lens_' NADevice (Maybe NAPlace)
nADevicePlaceL f NADevice{..} = (\nADevicePlace -> NADevice { nADevicePlace, ..} ) <$> f nADevicePlace
{-# INLINE nADevicePlaceL #-}

-- | 'nADeviceSetpoint' Lens
nADeviceSetpointL :: Lens_' NADevice (Maybe A.Value)
nADeviceSetpointL f NADevice{..} = (\nADeviceSetpoint -> NADevice { nADeviceSetpoint, ..} ) <$> f nADeviceSetpoint
{-# INLINE nADeviceSetpointL #-}

-- | 'nADeviceSetpointDefaultDuration' Lens
nADeviceSetpointDefaultDurationL :: Lens_' NADevice (Maybe Int)
nADeviceSetpointDefaultDurationL f NADevice{..} = (\nADeviceSetpointDefaultDuration -> NADevice { nADeviceSetpointDefaultDuration, ..} ) <$> f nADeviceSetpointDefaultDuration
{-# INLINE nADeviceSetpointDefaultDurationL #-}

-- | 'nADeviceSetpointOrder' Lens
nADeviceSetpointOrderL :: Lens_' NADevice (Maybe (Map.Map String [NAObject]))
nADeviceSetpointOrderL f NADevice{..} = (\nADeviceSetpointOrder -> NADevice { nADeviceSetpointOrder, ..} ) <$> f nADeviceSetpointOrder
{-# INLINE nADeviceSetpointOrderL #-}

-- | 'nADevicePublicExtData' Lens
nADevicePublicExtDataL :: Lens_' NADevice (Maybe Bool)
nADevicePublicExtDataL f NADevice{..} = (\nADevicePublicExtData -> NADevice { nADevicePublicExtData, ..} ) <$> f nADevicePublicExtData
{-# INLINE nADevicePublicExtDataL #-}

-- | 'nADeviceStationName' Lens
nADeviceStationNameL :: Lens_' NADevice (Maybe Text)
nADeviceStationNameL f NADevice{..} = (\nADeviceStationName -> NADevice { nADeviceStationName, ..} ) <$> f nADeviceStationName
{-# INLINE nADeviceStationNameL #-}

-- | 'nADeviceThermProgram' Lens
nADeviceThermProgramL :: Lens_' NADevice (Maybe (Map.Map String NAThermProgram))
nADeviceThermProgramL f NADevice{..} = (\nADeviceThermProgram -> NADevice { nADeviceThermProgram, ..} ) <$> f nADeviceThermProgram
{-# INLINE nADeviceThermProgramL #-}

-- | 'nADeviceThermProgramBackup' Lens
nADeviceThermProgramBackupL :: Lens_' NADevice (Maybe (Map.Map String [NAThermProgram]))
nADeviceThermProgramBackupL f NADevice{..} = (\nADeviceThermProgramBackup -> NADevice { nADeviceThermProgramBackup, ..} ) <$> f nADeviceThermProgramBackup
{-# INLINE nADeviceThermProgramBackupL #-}

-- | 'nADeviceThermProgramOrder' Lens
nADeviceThermProgramOrderL :: Lens_' NADevice (Maybe (Map.Map String [NAObject]))
nADeviceThermProgramOrderL f NADevice{..} = (\nADeviceThermProgramOrder -> NADevice { nADeviceThermProgramOrder, ..} ) <$> f nADeviceThermProgramOrder
{-# INLINE nADeviceThermProgramOrderL #-}

-- | 'nADeviceType' Lens
nADeviceTypeL :: Lens_' NADevice (Maybe Text)
nADeviceTypeL f NADevice{..} = (\nADeviceType -> NADevice { nADeviceType, ..} ) <$> f nADeviceType
{-# INLINE nADeviceTypeL #-}

-- | 'nADeviceUserOwner' Lens
nADeviceUserOwnerL :: Lens_' NADevice (Maybe [Text])
nADeviceUserOwnerL f NADevice{..} = (\nADeviceUserOwner -> NADevice { nADeviceUserOwner, ..} ) <$> f nADeviceUserOwner
{-# INLINE nADeviceUserOwnerL #-}

-- | 'nADeviceUdpConn' Lens
nADeviceUdpConnL :: Lens_' NADevice (Maybe Bool)
nADeviceUdpConnL f NADevice{..} = (\nADeviceUdpConn -> NADevice { nADeviceUdpConn, ..} ) <$> f nADeviceUdpConn
{-# INLINE nADeviceUdpConnL #-}

-- | 'nADeviceWifiStatus' Lens
nADeviceWifiStatusL :: Lens_' NADevice (Maybe Int)
nADeviceWifiStatusL f NADevice{..} = (\nADeviceWifiStatus -> NADevice { nADeviceWifiStatus, ..} ) <$> f nADeviceWifiStatus
{-# INLINE nADeviceWifiStatusL #-}

-- | 'nADeviceNewFeatureAvail' Lens
nADeviceNewFeatureAvailL :: Lens_' NADevice (Maybe Bool)
nADeviceNewFeatureAvailL f NADevice{..} = (\nADeviceNewFeatureAvail -> NADevice { nADeviceNewFeatureAvail, ..} ) <$> f nADeviceNewFeatureAvail
{-# INLINE nADeviceNewFeatureAvailL #-}

-- | 'nADeviceFirstPidAvail' Lens
nADeviceFirstPidAvailL :: Lens_' NADevice (Maybe Bool)
nADeviceFirstPidAvailL f NADevice{..} = (\nADeviceFirstPidAvail -> NADevice { nADeviceFirstPidAvail, ..} ) <$> f nADeviceFirstPidAvail
{-# INLINE nADeviceFirstPidAvailL #-}

-- | 'nADeviceDashboardData' Lens
nADeviceDashboardDataL :: Lens_' NADevice (Maybe NADashboardData)
nADeviceDashboardDataL f NADevice{..} = (\nADeviceDashboardData -> NADevice { nADeviceDashboardData, ..} ) <$> f nADeviceDashboardData
{-# INLINE nADeviceDashboardDataL #-}

-- | 'nADeviceDataType' Lens
nADeviceDataTypeL :: Lens_' NADevice (Maybe [Text])
nADeviceDataTypeL f NADevice{..} = (\nADeviceDataType -> NADevice { nADeviceDataType, ..} ) <$> f nADeviceDataType
{-# INLINE nADeviceDataTypeL #-}



-- * NADeviceListBody

-- | 'nADeviceListBodyDevices' Lens
nADeviceListBodyDevicesL :: Lens_' NADeviceListBody (Maybe [NADevice])
nADeviceListBodyDevicesL f NADeviceListBody{..} = (\nADeviceListBodyDevices -> NADeviceListBody { nADeviceListBodyDevices, ..} ) <$> f nADeviceListBodyDevices
{-# INLINE nADeviceListBodyDevicesL #-}

-- | 'nADeviceListBodyModules' Lens
nADeviceListBodyModulesL :: Lens_' NADeviceListBody (Maybe [NAModule])
nADeviceListBodyModulesL f NADeviceListBody{..} = (\nADeviceListBodyModules -> NADeviceListBody { nADeviceListBodyModules, ..} ) <$> f nADeviceListBodyModules
{-# INLINE nADeviceListBodyModulesL #-}



-- * NADeviceListResponse

-- | 'nADeviceListResponseStatus' Lens
nADeviceListResponseStatusL :: Lens_' NADeviceListResponse (Maybe Text)
nADeviceListResponseStatusL f NADeviceListResponse{..} = (\nADeviceListResponseStatus -> NADeviceListResponse { nADeviceListResponseStatus, ..} ) <$> f nADeviceListResponseStatus
{-# INLINE nADeviceListResponseStatusL #-}

-- | 'nADeviceListResponseBody' Lens
nADeviceListResponseBodyL :: Lens_' NADeviceListResponse (Maybe NADeviceListBody)
nADeviceListResponseBodyL f NADeviceListResponse{..} = (\nADeviceListResponseBody -> NADeviceListResponse { nADeviceListResponseBody, ..} ) <$> f nADeviceListResponseBody
{-# INLINE nADeviceListResponseBodyL #-}

-- | 'nADeviceListResponseTimeExec' Lens
nADeviceListResponseTimeExecL :: Lens_' NADeviceListResponse (Maybe Double)
nADeviceListResponseTimeExecL f NADeviceListResponse{..} = (\nADeviceListResponseTimeExec -> NADeviceListResponse { nADeviceListResponseTimeExec, ..} ) <$> f nADeviceListResponseTimeExec
{-# INLINE nADeviceListResponseTimeExecL #-}

-- | 'nADeviceListResponseTimeServer' Lens
nADeviceListResponseTimeServerL :: Lens_' NADeviceListResponse (Maybe Int)
nADeviceListResponseTimeServerL f NADeviceListResponse{..} = (\nADeviceListResponseTimeServer -> NADeviceListResponse { nADeviceListResponseTimeServer, ..} ) <$> f nADeviceListResponseTimeServer
{-# INLINE nADeviceListResponseTimeServerL #-}



-- * NAHealthyHomeCoach

-- | 'nAHealthyHomeCoachId' Lens
nAHealthyHomeCoachIdL :: Lens_' NAHealthyHomeCoach (Maybe Text)
nAHealthyHomeCoachIdL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachId -> NAHealthyHomeCoach { nAHealthyHomeCoachId, ..} ) <$> f nAHealthyHomeCoachId
{-# INLINE nAHealthyHomeCoachIdL #-}

-- | 'nAHealthyHomeCoachCipherId' Lens
nAHealthyHomeCoachCipherIdL :: Lens_' NAHealthyHomeCoach (Maybe Text)
nAHealthyHomeCoachCipherIdL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachCipherId -> NAHealthyHomeCoach { nAHealthyHomeCoachCipherId, ..} ) <$> f nAHealthyHomeCoachCipherId
{-# INLINE nAHealthyHomeCoachCipherIdL #-}

-- | 'nAHealthyHomeCoachLastStatusStore' Lens
nAHealthyHomeCoachLastStatusStoreL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachLastStatusStoreL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachLastStatusStore -> NAHealthyHomeCoach { nAHealthyHomeCoachLastStatusStore, ..} ) <$> f nAHealthyHomeCoachLastStatusStore
{-# INLINE nAHealthyHomeCoachLastStatusStoreL #-}

-- | 'nAHealthyHomeCoachPlace' Lens
nAHealthyHomeCoachPlaceL :: Lens_' NAHealthyHomeCoach (Maybe NAPlace)
nAHealthyHomeCoachPlaceL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachPlace -> NAHealthyHomeCoach { nAHealthyHomeCoachPlace, ..} ) <$> f nAHealthyHomeCoachPlace
{-# INLINE nAHealthyHomeCoachPlaceL #-}

-- | 'nAHealthyHomeCoachType' Lens
nAHealthyHomeCoachTypeL :: Lens_' NAHealthyHomeCoach (Maybe Text)
nAHealthyHomeCoachTypeL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachType -> NAHealthyHomeCoach { nAHealthyHomeCoachType, ..} ) <$> f nAHealthyHomeCoachType
{-# INLINE nAHealthyHomeCoachTypeL #-}

-- | 'nAHealthyHomeCoachDashboardData' Lens
nAHealthyHomeCoachDashboardDataL :: Lens_' NAHealthyHomeCoach (Maybe NADashboardData)
nAHealthyHomeCoachDashboardDataL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachDashboardData -> NAHealthyHomeCoach { nAHealthyHomeCoachDashboardData, ..} ) <$> f nAHealthyHomeCoachDashboardData
{-# INLINE nAHealthyHomeCoachDashboardDataL #-}

-- | 'nAHealthyHomeCoachDataType' Lens
nAHealthyHomeCoachDataTypeL :: Lens_' NAHealthyHomeCoach (Maybe [Text])
nAHealthyHomeCoachDataTypeL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachDataType -> NAHealthyHomeCoach { nAHealthyHomeCoachDataType, ..} ) <$> f nAHealthyHomeCoachDataType
{-# INLINE nAHealthyHomeCoachDataTypeL #-}

-- | 'nAHealthyHomeCoachCo2Calibrating' Lens
nAHealthyHomeCoachCo2CalibratingL :: Lens_' NAHealthyHomeCoach (Maybe Bool)
nAHealthyHomeCoachCo2CalibratingL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachCo2Calibrating -> NAHealthyHomeCoach { nAHealthyHomeCoachCo2Calibrating, ..} ) <$> f nAHealthyHomeCoachCo2Calibrating
{-# INLINE nAHealthyHomeCoachCo2CalibratingL #-}

-- | 'nAHealthyHomeCoachDateSetup' Lens
nAHealthyHomeCoachDateSetupL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachDateSetupL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachDateSetup -> NAHealthyHomeCoach { nAHealthyHomeCoachDateSetup, ..} ) <$> f nAHealthyHomeCoachDateSetup
{-# INLINE nAHealthyHomeCoachDateSetupL #-}

-- | 'nAHealthyHomeCoachLastSetup' Lens
nAHealthyHomeCoachLastSetupL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachLastSetupL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachLastSetup -> NAHealthyHomeCoach { nAHealthyHomeCoachLastSetup, ..} ) <$> f nAHealthyHomeCoachLastSetup
{-# INLINE nAHealthyHomeCoachLastSetupL #-}

-- | 'nAHealthyHomeCoachFirmware' Lens
nAHealthyHomeCoachFirmwareL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachFirmwareL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachFirmware -> NAHealthyHomeCoach { nAHealthyHomeCoachFirmware, ..} ) <$> f nAHealthyHomeCoachFirmware
{-# INLINE nAHealthyHomeCoachFirmwareL #-}

-- | 'nAHealthyHomeCoachLastUpgrade' Lens
nAHealthyHomeCoachLastUpgradeL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachLastUpgradeL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachLastUpgrade -> NAHealthyHomeCoach { nAHealthyHomeCoachLastUpgrade, ..} ) <$> f nAHealthyHomeCoachLastUpgrade
{-# INLINE nAHealthyHomeCoachLastUpgradeL #-}

-- | 'nAHealthyHomeCoachWifiStatus' Lens
nAHealthyHomeCoachWifiStatusL :: Lens_' NAHealthyHomeCoach (Maybe Int)
nAHealthyHomeCoachWifiStatusL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachWifiStatus -> NAHealthyHomeCoach { nAHealthyHomeCoachWifiStatus, ..} ) <$> f nAHealthyHomeCoachWifiStatus
{-# INLINE nAHealthyHomeCoachWifiStatusL #-}

-- | 'nAHealthyHomeCoachName' Lens
nAHealthyHomeCoachNameL :: Lens_' NAHealthyHomeCoach (Maybe Text)
nAHealthyHomeCoachNameL f NAHealthyHomeCoach{..} = (\nAHealthyHomeCoachName -> NAHealthyHomeCoach { nAHealthyHomeCoachName, ..} ) <$> f nAHealthyHomeCoachName
{-# INLINE nAHealthyHomeCoachNameL #-}



-- * NAHealthyHomeCoachDataBody

-- | 'nAHealthyHomeCoachDataBodyDevices' Lens
nAHealthyHomeCoachDataBodyDevicesL :: Lens_' NAHealthyHomeCoachDataBody (Maybe [NAHealthyHomeCoach])
nAHealthyHomeCoachDataBodyDevicesL f NAHealthyHomeCoachDataBody{..} = (\nAHealthyHomeCoachDataBodyDevices -> NAHealthyHomeCoachDataBody { nAHealthyHomeCoachDataBodyDevices, ..} ) <$> f nAHealthyHomeCoachDataBodyDevices
{-# INLINE nAHealthyHomeCoachDataBodyDevicesL #-}

-- | 'nAHealthyHomeCoachDataBodyUser' Lens
nAHealthyHomeCoachDataBodyUserL :: Lens_' NAHealthyHomeCoachDataBody (Maybe NAUser)
nAHealthyHomeCoachDataBodyUserL f NAHealthyHomeCoachDataBody{..} = (\nAHealthyHomeCoachDataBodyUser -> NAHealthyHomeCoachDataBody { nAHealthyHomeCoachDataBodyUser, ..} ) <$> f nAHealthyHomeCoachDataBodyUser
{-# INLINE nAHealthyHomeCoachDataBodyUserL #-}



-- * NAHealthyHomeCoachDataResponse

-- | 'nAHealthyHomeCoachDataResponseStatus' Lens
nAHealthyHomeCoachDataResponseStatusL :: Lens_' NAHealthyHomeCoachDataResponse (Maybe Text)
nAHealthyHomeCoachDataResponseStatusL f NAHealthyHomeCoachDataResponse{..} = (\nAHealthyHomeCoachDataResponseStatus -> NAHealthyHomeCoachDataResponse { nAHealthyHomeCoachDataResponseStatus, ..} ) <$> f nAHealthyHomeCoachDataResponseStatus
{-# INLINE nAHealthyHomeCoachDataResponseStatusL #-}

-- | 'nAHealthyHomeCoachDataResponseBody' Lens
nAHealthyHomeCoachDataResponseBodyL :: Lens_' NAHealthyHomeCoachDataResponse (Maybe NAHealthyHomeCoachDataBody)
nAHealthyHomeCoachDataResponseBodyL f NAHealthyHomeCoachDataResponse{..} = (\nAHealthyHomeCoachDataResponseBody -> NAHealthyHomeCoachDataResponse { nAHealthyHomeCoachDataResponseBody, ..} ) <$> f nAHealthyHomeCoachDataResponseBody
{-# INLINE nAHealthyHomeCoachDataResponseBodyL #-}

-- | 'nAHealthyHomeCoachDataResponseTimeExec' Lens
nAHealthyHomeCoachDataResponseTimeExecL :: Lens_' NAHealthyHomeCoachDataResponse (Maybe Double)
nAHealthyHomeCoachDataResponseTimeExecL f NAHealthyHomeCoachDataResponse{..} = (\nAHealthyHomeCoachDataResponseTimeExec -> NAHealthyHomeCoachDataResponse { nAHealthyHomeCoachDataResponseTimeExec, ..} ) <$> f nAHealthyHomeCoachDataResponseTimeExec
{-# INLINE nAHealthyHomeCoachDataResponseTimeExecL #-}

-- | 'nAHealthyHomeCoachDataResponseTimeServer' Lens
nAHealthyHomeCoachDataResponseTimeServerL :: Lens_' NAHealthyHomeCoachDataResponse (Maybe Int)
nAHealthyHomeCoachDataResponseTimeServerL f NAHealthyHomeCoachDataResponse{..} = (\nAHealthyHomeCoachDataResponseTimeServer -> NAHealthyHomeCoachDataResponse { nAHealthyHomeCoachDataResponseTimeServer, ..} ) <$> f nAHealthyHomeCoachDataResponseTimeServer
{-# INLINE nAHealthyHomeCoachDataResponseTimeServerL #-}



-- * NAHeatingSystem

-- | 'nAHeatingSystemHeatingEnergy' Lens
nAHeatingSystemHeatingEnergyL :: Lens_' NAHeatingSystem (Maybe Text)
nAHeatingSystemHeatingEnergyL f NAHeatingSystem{..} = (\nAHeatingSystemHeatingEnergy -> NAHeatingSystem { nAHeatingSystemHeatingEnergy, ..} ) <$> f nAHeatingSystemHeatingEnergy
{-# INLINE nAHeatingSystemHeatingEnergyL #-}

-- | 'nAHeatingSystemHeatingSystemWindowSeen' Lens
nAHeatingSystemHeatingSystemWindowSeenL :: Lens_' NAHeatingSystem (Maybe Bool)
nAHeatingSystemHeatingSystemWindowSeenL f NAHeatingSystem{..} = (\nAHeatingSystemHeatingSystemWindowSeen -> NAHeatingSystem { nAHeatingSystemHeatingSystemWindowSeen, ..} ) <$> f nAHeatingSystemHeatingSystemWindowSeen
{-# INLINE nAHeatingSystemHeatingSystemWindowSeenL #-}



-- * NAHouseModel

-- | 'nAHouseModelAlgoType' Lens
nAHouseModelAlgoTypeL :: Lens_' NAHouseModel (Maybe Text)
nAHouseModelAlgoTypeL f NAHouseModel{..} = (\nAHouseModelAlgoType -> NAHouseModel { nAHouseModelAlgoType, ..} ) <$> f nAHouseModelAlgoType
{-# INLINE nAHouseModelAlgoTypeL #-}

-- | 'nAHouseModelCa' Lens
nAHouseModelCaL :: Lens_' NAHouseModel (Maybe NAHouseModelCa)
nAHouseModelCaL f NAHouseModel{..} = (\nAHouseModelCa -> NAHouseModel { nAHouseModelCa, ..} ) <$> f nAHouseModelCa
{-# INLINE nAHouseModelCaL #-}

-- | 'nAHouseModelExtTemps' Lens
nAHouseModelExtTempsL :: Lens_' NAHouseModel (Maybe (Map.Map String Int))
nAHouseModelExtTempsL f NAHouseModel{..} = (\nAHouseModelExtTemps -> NAHouseModel { nAHouseModelExtTemps, ..} ) <$> f nAHouseModelExtTemps
{-# INLINE nAHouseModelExtTempsL #-}

-- | 'nAHouseModelFirstAnticipateAvail' Lens
nAHouseModelFirstAnticipateAvailL :: Lens_' NAHouseModel (Maybe Bool)
nAHouseModelFirstAnticipateAvailL f NAHouseModel{..} = (\nAHouseModelFirstAnticipateAvail -> NAHouseModel { nAHouseModelFirstAnticipateAvail, ..} ) <$> f nAHouseModelFirstAnticipateAvail
{-# INLINE nAHouseModelFirstAnticipateAvailL #-}

-- | 'nAHouseModelFirstPidAvail' Lens
nAHouseModelFirstPidAvailL :: Lens_' NAHouseModel (Maybe Bool)
nAHouseModelFirstPidAvailL f NAHouseModel{..} = (\nAHouseModelFirstPidAvail -> NAHouseModel { nAHouseModelFirstPidAvail, ..} ) <$> f nAHouseModelFirstPidAvail
{-# INLINE nAHouseModelFirstPidAvailL #-}

-- | 'nAHouseModelGefs' Lens
nAHouseModelGefsL :: Lens_' NAHouseModel (Maybe NAStation)
nAHouseModelGefsL f NAHouseModel{..} = (\nAHouseModelGefs -> NAHouseModel { nAHouseModelGefs, ..} ) <$> f nAHouseModelGefs
{-# INLINE nAHouseModelGefsL #-}

-- | 'nAHouseModelInUse' Lens
nAHouseModelInUseL :: Lens_' NAHouseModel (Maybe Text)
nAHouseModelInUseL f NAHouseModel{..} = (\nAHouseModelInUse -> NAHouseModel { nAHouseModelInUse, ..} ) <$> f nAHouseModelInUse
{-# INLINE nAHouseModelInUseL #-}

-- | 'nAHouseModelLastComputeTry' Lens
nAHouseModelLastComputeTryL :: Lens_' NAHouseModel (Maybe NADate)
nAHouseModelLastComputeTryL f NAHouseModel{..} = (\nAHouseModelLastComputeTry -> NAHouseModel { nAHouseModelLastComputeTry, ..} ) <$> f nAHouseModelLastComputeTry
{-# INLINE nAHouseModelLastComputeTryL #-}

-- | 'nAHouseModelLinkStation' Lens
nAHouseModelLinkStationL :: Lens_' NAHouseModel (Maybe NALinkStation)
nAHouseModelLinkStationL f NAHouseModel{..} = (\nAHouseModelLinkStation -> NAHouseModel { nAHouseModelLinkStation, ..} ) <$> f nAHouseModelLinkStation
{-# INLINE nAHouseModelLinkStationL #-}

-- | 'nAHouseModelPidAlgo' Lens
nAHouseModelPidAlgoL :: Lens_' NAHouseModel (Maybe NAPidAlgo)
nAHouseModelPidAlgoL f NAHouseModel{..} = (\nAHouseModelPidAlgo -> NAHouseModel { nAHouseModelPidAlgo, ..} ) <$> f nAHouseModelPidAlgo
{-# INLINE nAHouseModelPidAlgoL #-}

-- | 'nAHouseModelStation' Lens
nAHouseModelStationL :: Lens_' NAHouseModel (Maybe NAStation)
nAHouseModelStationL f NAHouseModel{..} = (\nAHouseModelStation -> NAHouseModel { nAHouseModelStation, ..} ) <$> f nAHouseModelStation
{-# INLINE nAHouseModelStationL #-}

-- | 'nAHouseModelPreferedAlgoType' Lens
nAHouseModelPreferedAlgoTypeL :: Lens_' NAHouseModel (Maybe Text)
nAHouseModelPreferedAlgoTypeL f NAHouseModel{..} = (\nAHouseModelPreferedAlgoType -> NAHouseModel { nAHouseModelPreferedAlgoType, ..} ) <$> f nAHouseModelPreferedAlgoType
{-# INLINE nAHouseModelPreferedAlgoTypeL #-}

-- | 'nAHouseModelSimpleAlgo' Lens
nAHouseModelSimpleAlgoL :: Lens_' NAHouseModel (Maybe NASimpleAlgo)
nAHouseModelSimpleAlgoL f NAHouseModel{..} = (\nAHouseModelSimpleAlgo -> NAHouseModel { nAHouseModelSimpleAlgo, ..} ) <$> f nAHouseModelSimpleAlgo
{-# INLINE nAHouseModelSimpleAlgoL #-}

-- | 'nAHouseModelTime' Lens
nAHouseModelTimeL :: Lens_' NAHouseModel (Maybe NADate)
nAHouseModelTimeL f NAHouseModel{..} = (\nAHouseModelTime -> NAHouseModel { nAHouseModelTime, ..} ) <$> f nAHouseModelTime
{-# INLINE nAHouseModelTimeL #-}

-- | 'nAHouseModelStationFirsttimeAnticipate' Lens
nAHouseModelStationFirsttimeAnticipateL :: Lens_' NAHouseModel (Maybe Bool)
nAHouseModelStationFirsttimeAnticipateL f NAHouseModel{..} = (\nAHouseModelStationFirsttimeAnticipate -> NAHouseModel { nAHouseModelStationFirsttimeAnticipate, ..} ) <$> f nAHouseModelStationFirsttimeAnticipate
{-# INLINE nAHouseModelStationFirsttimeAnticipateL #-}

-- | 'nAHouseModelTimeAlgoChanged' Lens
nAHouseModelTimeAlgoChangedL :: Lens_' NAHouseModel (Maybe Int)
nAHouseModelTimeAlgoChangedL f NAHouseModel{..} = (\nAHouseModelTimeAlgoChanged -> NAHouseModel { nAHouseModelTimeAlgoChanged, ..} ) <$> f nAHouseModelTimeAlgoChanged
{-# INLINE nAHouseModelTimeAlgoChangedL #-}

-- | 'nAHouseModelTimePidComputed' Lens
nAHouseModelTimePidComputedL :: Lens_' NAHouseModel (Maybe Int)
nAHouseModelTimePidComputedL f NAHouseModel{..} = (\nAHouseModelTimePidComputed -> NAHouseModel { nAHouseModelTimePidComputed, ..} ) <$> f nAHouseModelTimePidComputed
{-# INLINE nAHouseModelTimePidComputedL #-}



-- * NAHouseModelCa

-- | 'nAHouseModelCaTe' Lens
nAHouseModelCaTeL :: Lens_' NAHouseModelCa (Maybe Double)
nAHouseModelCaTeL f NAHouseModelCa{..} = (\nAHouseModelCaTe -> NAHouseModelCa { nAHouseModelCaTe, ..} ) <$> f nAHouseModelCaTe
{-# INLINE nAHouseModelCaTeL #-}

-- | 'nAHouseModelCaTi' Lens
nAHouseModelCaTiL :: Lens_' NAHouseModelCa (Maybe Int)
nAHouseModelCaTiL f NAHouseModelCa{..} = (\nAHouseModelCaTi -> NAHouseModelCa { nAHouseModelCaTi, ..} ) <$> f nAHouseModelCaTi
{-# INLINE nAHouseModelCaTiL #-}

-- | 'nAHouseModelCaSo' Lens
nAHouseModelCaSoL :: Lens_' NAHouseModelCa (Maybe Text)
nAHouseModelCaSoL f NAHouseModelCa{..} = (\nAHouseModelCaSo -> NAHouseModelCa { nAHouseModelCaSo, ..} ) <$> f nAHouseModelCaSo
{-# INLINE nAHouseModelCaSoL #-}



-- * NALinkStation

-- | 'nALinkStationMac' Lens
nALinkStationMacL :: Lens_' NALinkStation (Maybe Text)
nALinkStationMacL f NALinkStation{..} = (\nALinkStationMac -> NALinkStation { nALinkStationMac, ..} ) <$> f nALinkStationMac
{-# INLINE nALinkStationMacL #-}

-- | 'nALinkStationExt' Lens
nALinkStationExtL :: Lens_' NALinkStation (Maybe Text)
nALinkStationExtL f NALinkStation{..} = (\nALinkStationExt -> NALinkStation { nALinkStationExt, ..} ) <$> f nALinkStationExt
{-# INLINE nALinkStationExtL #-}

-- | 'nALinkStationTemperature' Lens
nALinkStationTemperatureL :: Lens_' NALinkStation (Maybe Float)
nALinkStationTemperatureL f NALinkStation{..} = (\nALinkStationTemperature -> NALinkStation { nALinkStationTemperature, ..} ) <$> f nALinkStationTemperature
{-# INLINE nALinkStationTemperatureL #-}



-- * NAMain

-- | 'nAMainId' Lens
nAMainIdL :: Lens_' NAMain (Maybe Text)
nAMainIdL f NAMain{..} = (\nAMainId -> NAMain { nAMainId, ..} ) <$> f nAMainId
{-# INLINE nAMainIdL #-}

-- | 'nAMainCipherId' Lens
nAMainCipherIdL :: Lens_' NAMain (Maybe Text)
nAMainCipherIdL f NAMain{..} = (\nAMainCipherId -> NAMain { nAMainCipherId, ..} ) <$> f nAMainCipherId
{-# INLINE nAMainCipherIdL #-}

-- | 'nAMainLastStatusStore' Lens
nAMainLastStatusStoreL :: Lens_' NAMain (Maybe Int)
nAMainLastStatusStoreL f NAMain{..} = (\nAMainLastStatusStore -> NAMain { nAMainLastStatusStore, ..} ) <$> f nAMainLastStatusStore
{-# INLINE nAMainLastStatusStoreL #-}

-- | 'nAMainModules' Lens
nAMainModulesL :: Lens_' NAMain (Maybe [NAStationModule])
nAMainModulesL f NAMain{..} = (\nAMainModules -> NAMain { nAMainModules, ..} ) <$> f nAMainModules
{-# INLINE nAMainModulesL #-}

-- | 'nAMainPlace' Lens
nAMainPlaceL :: Lens_' NAMain (Maybe NAPlace)
nAMainPlaceL f NAMain{..} = (\nAMainPlace -> NAMain { nAMainPlace, ..} ) <$> f nAMainPlace
{-# INLINE nAMainPlaceL #-}

-- | 'nAMainStationName' Lens
nAMainStationNameL :: Lens_' NAMain (Maybe Text)
nAMainStationNameL f NAMain{..} = (\nAMainStationName -> NAMain { nAMainStationName, ..} ) <$> f nAMainStationName
{-# INLINE nAMainStationNameL #-}

-- | 'nAMainType' Lens
nAMainTypeL :: Lens_' NAMain (Maybe Text)
nAMainTypeL f NAMain{..} = (\nAMainType -> NAMain { nAMainType, ..} ) <$> f nAMainType
{-# INLINE nAMainTypeL #-}

-- | 'nAMainDashboardData' Lens
nAMainDashboardDataL :: Lens_' NAMain (Maybe NADashboardData)
nAMainDashboardDataL f NAMain{..} = (\nAMainDashboardData -> NAMain { nAMainDashboardData, ..} ) <$> f nAMainDashboardData
{-# INLINE nAMainDashboardDataL #-}

-- | 'nAMainDataType' Lens
nAMainDataTypeL :: Lens_' NAMain (Maybe [Text])
nAMainDataTypeL f NAMain{..} = (\nAMainDataType -> NAMain { nAMainDataType, ..} ) <$> f nAMainDataType
{-# INLINE nAMainDataTypeL #-}

-- | 'nAMainCo2Calibrating' Lens
nAMainCo2CalibratingL :: Lens_' NAMain (Maybe Bool)
nAMainCo2CalibratingL f NAMain{..} = (\nAMainCo2Calibrating -> NAMain { nAMainCo2Calibrating, ..} ) <$> f nAMainCo2Calibrating
{-# INLINE nAMainCo2CalibratingL #-}

-- | 'nAMainDateSetup' Lens
nAMainDateSetupL :: Lens_' NAMain (Maybe Int)
nAMainDateSetupL f NAMain{..} = (\nAMainDateSetup -> NAMain { nAMainDateSetup, ..} ) <$> f nAMainDateSetup
{-# INLINE nAMainDateSetupL #-}

-- | 'nAMainLastSetup' Lens
nAMainLastSetupL :: Lens_' NAMain (Maybe Int)
nAMainLastSetupL f NAMain{..} = (\nAMainLastSetup -> NAMain { nAMainLastSetup, ..} ) <$> f nAMainLastSetup
{-# INLINE nAMainLastSetupL #-}

-- | 'nAMainModuleName' Lens
nAMainModuleNameL :: Lens_' NAMain (Maybe Text)
nAMainModuleNameL f NAMain{..} = (\nAMainModuleName -> NAMain { nAMainModuleName, ..} ) <$> f nAMainModuleName
{-# INLINE nAMainModuleNameL #-}

-- | 'nAMainFirmware' Lens
nAMainFirmwareL :: Lens_' NAMain (Maybe Int)
nAMainFirmwareL f NAMain{..} = (\nAMainFirmware -> NAMain { nAMainFirmware, ..} ) <$> f nAMainFirmware
{-# INLINE nAMainFirmwareL #-}

-- | 'nAMainLastUpgrade' Lens
nAMainLastUpgradeL :: Lens_' NAMain (Maybe Int)
nAMainLastUpgradeL f NAMain{..} = (\nAMainLastUpgrade -> NAMain { nAMainLastUpgrade, ..} ) <$> f nAMainLastUpgrade
{-# INLINE nAMainLastUpgradeL #-}

-- | 'nAMainWifiStatus' Lens
nAMainWifiStatusL :: Lens_' NAMain (Maybe Int)
nAMainWifiStatusL f NAMain{..} = (\nAMainWifiStatus -> NAMain { nAMainWifiStatus, ..} ) <$> f nAMainWifiStatus
{-# INLINE nAMainWifiStatusL #-}



-- * NAMeasure

-- | 'nAMeasureRes' Lens
nAMeasureResL :: Lens_' NAMeasure (Maybe A.Value)
nAMeasureResL f NAMeasure{..} = (\nAMeasureRes -> NAMeasure { nAMeasureRes, ..} ) <$> f nAMeasureRes
{-# INLINE nAMeasureResL #-}

-- | 'nAMeasureType' Lens
nAMeasureTypeL :: Lens_' NAMeasure (Maybe [Text])
nAMeasureTypeL f NAMeasure{..} = (\nAMeasureType -> NAMeasure { nAMeasureType, ..} ) <$> f nAMeasureType
{-# INLINE nAMeasureTypeL #-}

-- | 'nAMeasureRain60min' Lens
nAMeasureRain60minL :: Lens_' NAMeasure (Maybe Double)
nAMeasureRain60minL f NAMeasure{..} = (\nAMeasureRain60min -> NAMeasure { nAMeasureRain60min, ..} ) <$> f nAMeasureRain60min
{-# INLINE nAMeasureRain60minL #-}

-- | 'nAMeasureRain24h' Lens
nAMeasureRain24hL :: Lens_' NAMeasure (Maybe Double)
nAMeasureRain24hL f NAMeasure{..} = (\nAMeasureRain24h -> NAMeasure { nAMeasureRain24h, ..} ) <$> f nAMeasureRain24h
{-# INLINE nAMeasureRain24hL #-}

-- | 'nAMeasureRainLive' Lens
nAMeasureRainLiveL :: Lens_' NAMeasure (Maybe Double)
nAMeasureRainLiveL f NAMeasure{..} = (\nAMeasureRainLive -> NAMeasure { nAMeasureRainLive, ..} ) <$> f nAMeasureRainLive
{-# INLINE nAMeasureRainLiveL #-}

-- | 'nAMeasureRainUtc' Lens
nAMeasureRainUtcL :: Lens_' NAMeasure (Maybe Integer)
nAMeasureRainUtcL f NAMeasure{..} = (\nAMeasureRainUtc -> NAMeasure { nAMeasureRainUtc, ..} ) <$> f nAMeasureRainUtc
{-# INLINE nAMeasureRainUtcL #-}

-- | 'nAMeasureWindStrength' Lens
nAMeasureWindStrengthL :: Lens_' NAMeasure (Maybe Double)
nAMeasureWindStrengthL f NAMeasure{..} = (\nAMeasureWindStrength -> NAMeasure { nAMeasureWindStrength, ..} ) <$> f nAMeasureWindStrength
{-# INLINE nAMeasureWindStrengthL #-}

-- | 'nAMeasureWindAngle' Lens
nAMeasureWindAngleL :: Lens_' NAMeasure (Maybe Double)
nAMeasureWindAngleL f NAMeasure{..} = (\nAMeasureWindAngle -> NAMeasure { nAMeasureWindAngle, ..} ) <$> f nAMeasureWindAngle
{-# INLINE nAMeasureWindAngleL #-}

-- | 'nAMeasureGustStrength' Lens
nAMeasureGustStrengthL :: Lens_' NAMeasure (Maybe Double)
nAMeasureGustStrengthL f NAMeasure{..} = (\nAMeasureGustStrength -> NAMeasure { nAMeasureGustStrength, ..} ) <$> f nAMeasureGustStrength
{-# INLINE nAMeasureGustStrengthL #-}

-- | 'nAMeasureGustAngle' Lens
nAMeasureGustAngleL :: Lens_' NAMeasure (Maybe Double)
nAMeasureGustAngleL f NAMeasure{..} = (\nAMeasureGustAngle -> NAMeasure { nAMeasureGustAngle, ..} ) <$> f nAMeasureGustAngle
{-# INLINE nAMeasureGustAngleL #-}

-- | 'nAMeasureWindTimeutc' Lens
nAMeasureWindTimeutcL :: Lens_' NAMeasure (Maybe Integer)
nAMeasureWindTimeutcL f NAMeasure{..} = (\nAMeasureWindTimeutc -> NAMeasure { nAMeasureWindTimeutc, ..} ) <$> f nAMeasureWindTimeutc
{-# INLINE nAMeasureWindTimeutcL #-}



-- * NAMeasureBodyElem

-- | 'nAMeasureBodyElemBegTime' Lens
nAMeasureBodyElemBegTimeL :: Lens_' NAMeasureBodyElem (Maybe Int)
nAMeasureBodyElemBegTimeL f NAMeasureBodyElem{..} = (\nAMeasureBodyElemBegTime -> NAMeasureBodyElem { nAMeasureBodyElemBegTime, ..} ) <$> f nAMeasureBodyElemBegTime
{-# INLINE nAMeasureBodyElemBegTimeL #-}

-- | 'nAMeasureBodyElemStepTime' Lens
nAMeasureBodyElemStepTimeL :: Lens_' NAMeasureBodyElem (Maybe Int)
nAMeasureBodyElemStepTimeL f NAMeasureBodyElem{..} = (\nAMeasureBodyElemStepTime -> NAMeasureBodyElem { nAMeasureBodyElemStepTime, ..} ) <$> f nAMeasureBodyElemStepTime
{-# INLINE nAMeasureBodyElemStepTimeL #-}

-- | 'nAMeasureBodyElemValue' Lens
nAMeasureBodyElemValueL :: Lens_' NAMeasureBodyElem (Maybe [[Float]])
nAMeasureBodyElemValueL f NAMeasureBodyElem{..} = (\nAMeasureBodyElemValue -> NAMeasureBodyElem { nAMeasureBodyElemValue, ..} ) <$> f nAMeasureBodyElemValue
{-# INLINE nAMeasureBodyElemValueL #-}



-- * NAMeasureResponse

-- | 'nAMeasureResponseStatus' Lens
nAMeasureResponseStatusL :: Lens_' NAMeasureResponse (Maybe Text)
nAMeasureResponseStatusL f NAMeasureResponse{..} = (\nAMeasureResponseStatus -> NAMeasureResponse { nAMeasureResponseStatus, ..} ) <$> f nAMeasureResponseStatus
{-# INLINE nAMeasureResponseStatusL #-}

-- | 'nAMeasureResponseBody' Lens
nAMeasureResponseBodyL :: Lens_' NAMeasureResponse (Maybe [NAMeasureBodyElem])
nAMeasureResponseBodyL f NAMeasureResponse{..} = (\nAMeasureResponseBody -> NAMeasureResponse { nAMeasureResponseBody, ..} ) <$> f nAMeasureResponseBody
{-# INLINE nAMeasureResponseBodyL #-}

-- | 'nAMeasureResponseTimeExec' Lens
nAMeasureResponseTimeExecL :: Lens_' NAMeasureResponse (Maybe Double)
nAMeasureResponseTimeExecL f NAMeasureResponse{..} = (\nAMeasureResponseTimeExec -> NAMeasureResponse { nAMeasureResponseTimeExec, ..} ) <$> f nAMeasureResponseTimeExec
{-# INLINE nAMeasureResponseTimeExecL #-}

-- | 'nAMeasureResponseTimeServer' Lens
nAMeasureResponseTimeServerL :: Lens_' NAMeasureResponse (Maybe Int)
nAMeasureResponseTimeServerL f NAMeasureResponse{..} = (\nAMeasureResponseTimeServer -> NAMeasureResponse { nAMeasureResponseTimeServer, ..} ) <$> f nAMeasureResponseTimeServer
{-# INLINE nAMeasureResponseTimeServerL #-}



-- * NAModule

-- | 'nAModuleId' Lens
nAModuleIdL :: Lens_' NAModule (Maybe Text)
nAModuleIdL f NAModule{..} = (\nAModuleId -> NAModule { nAModuleId, ..} ) <$> f nAModuleId
{-# INLINE nAModuleIdL #-}

-- | 'nAModuleDateSetup' Lens
nAModuleDateSetupL :: Lens_' NAModule (Maybe NADate)
nAModuleDateSetupL f NAModule{..} = (\nAModuleDateSetup -> NAModule { nAModuleDateSetup, ..} ) <$> f nAModuleDateSetup
{-# INLINE nAModuleDateSetupL #-}

-- | 'nAModuleFirmware' Lens
nAModuleFirmwareL :: Lens_' NAModule (Maybe Int)
nAModuleFirmwareL f NAModule{..} = (\nAModuleFirmware -> NAModule { nAModuleFirmware, ..} ) <$> f nAModuleFirmware
{-# INLINE nAModuleFirmwareL #-}

-- | 'nAModuleType' Lens
nAModuleTypeL :: Lens_' NAModule (Maybe Text)
nAModuleTypeL f NAModule{..} = (\nAModuleType -> NAModule { nAModuleType, ..} ) <$> f nAModuleType
{-# INLINE nAModuleTypeL #-}

-- | 'nAModuleModuleName' Lens
nAModuleModuleNameL :: Lens_' NAModule (Maybe Text)
nAModuleModuleNameL f NAModule{..} = (\nAModuleModuleName -> NAModule { nAModuleModuleName, ..} ) <$> f nAModuleModuleName
{-# INLINE nAModuleModuleNameL #-}

-- | 'nAModuleMainDevice' Lens
nAModuleMainDeviceL :: Lens_' NAModule (Maybe Text)
nAModuleMainDeviceL f NAModule{..} = (\nAModuleMainDevice -> NAModule { nAModuleMainDevice, ..} ) <$> f nAModuleMainDevice
{-# INLINE nAModuleMainDeviceL #-}

-- | 'nAModuleLastMessage' Lens
nAModuleLastMessageL :: Lens_' NAModule (Maybe Int)
nAModuleLastMessageL f NAModule{..} = (\nAModuleLastMessage -> NAModule { nAModuleLastMessage, ..} ) <$> f nAModuleLastMessage
{-# INLINE nAModuleLastMessageL #-}

-- | 'nAModuleLastSeen' Lens
nAModuleLastSeenL :: Lens_' NAModule (Maybe Int)
nAModuleLastSeenL f NAModule{..} = (\nAModuleLastSeen -> NAModule { nAModuleLastSeen, ..} ) <$> f nAModuleLastSeen
{-# INLINE nAModuleLastSeenL #-}

-- | 'nAModulePublicExtData' Lens
nAModulePublicExtDataL :: Lens_' NAModule (Maybe Bool)
nAModulePublicExtDataL f NAModule{..} = (\nAModulePublicExtData -> NAModule { nAModulePublicExtData, ..} ) <$> f nAModulePublicExtData
{-# INLINE nAModulePublicExtDataL #-}

-- | 'nAModuleRfStatus' Lens
nAModuleRfStatusL :: Lens_' NAModule (Maybe Int)
nAModuleRfStatusL f NAModule{..} = (\nAModuleRfStatus -> NAModule { nAModuleRfStatus, ..} ) <$> f nAModuleRfStatus
{-# INLINE nAModuleRfStatusL #-}

-- | 'nAModuleBatteryVp' Lens
nAModuleBatteryVpL :: Lens_' NAModule (Maybe Int)
nAModuleBatteryVpL f NAModule{..} = (\nAModuleBatteryVp -> NAModule { nAModuleBatteryVp, ..} ) <$> f nAModuleBatteryVp
{-# INLINE nAModuleBatteryVpL #-}

-- | 'nAModuleBatteryPercent' Lens
nAModuleBatteryPercentL :: Lens_' NAModule (Maybe Int)
nAModuleBatteryPercentL f NAModule{..} = (\nAModuleBatteryPercent -> NAModule { nAModuleBatteryPercent, ..} ) <$> f nAModuleBatteryPercent
{-# INLINE nAModuleBatteryPercentL #-}

-- | 'nAModuleThermOrientation' Lens
nAModuleThermOrientationL :: Lens_' NAModule (Maybe Int)
nAModuleThermOrientationL f NAModule{..} = (\nAModuleThermOrientation -> NAModule { nAModuleThermOrientation, ..} ) <$> f nAModuleThermOrientation
{-# INLINE nAModuleThermOrientationL #-}

-- | 'nAModuleThermRelayCmd' Lens
nAModuleThermRelayCmdL :: Lens_' NAModule (Maybe Int)
nAModuleThermRelayCmdL f NAModule{..} = (\nAModuleThermRelayCmd -> NAModule { nAModuleThermRelayCmd, ..} ) <$> f nAModuleThermRelayCmd
{-# INLINE nAModuleThermRelayCmdL #-}

-- | 'nAModuleDashboardData' Lens
nAModuleDashboardDataL :: Lens_' NAModule (Maybe NADashboardData)
nAModuleDashboardDataL f NAModule{..} = (\nAModuleDashboardData -> NAModule { nAModuleDashboardData, ..} ) <$> f nAModuleDashboardData
{-# INLINE nAModuleDashboardDataL #-}

-- | 'nAModuleDataType' Lens
nAModuleDataTypeL :: Lens_' NAModule (Maybe [Text])
nAModuleDataTypeL f NAModule{..} = (\nAModuleDataType -> NAModule { nAModuleDataType, ..} ) <$> f nAModuleDataType
{-# INLINE nAModuleDataTypeL #-}



-- * NANewScheduleBody

-- | 'nANewScheduleBodyScheduleId' Lens
nANewScheduleBodyScheduleIdL :: Lens_' NANewScheduleBody (Maybe Text)
nANewScheduleBodyScheduleIdL f NANewScheduleBody{..} = (\nANewScheduleBodyScheduleId -> NANewScheduleBody { nANewScheduleBodyScheduleId, ..} ) <$> f nANewScheduleBodyScheduleId
{-# INLINE nANewScheduleBodyScheduleIdL #-}



-- * NANewScheduleResponse

-- | 'nANewScheduleResponseStatus' Lens
nANewScheduleResponseStatusL :: Lens_' NANewScheduleResponse (Maybe Text)
nANewScheduleResponseStatusL f NANewScheduleResponse{..} = (\nANewScheduleResponseStatus -> NANewScheduleResponse { nANewScheduleResponseStatus, ..} ) <$> f nANewScheduleResponseStatus
{-# INLINE nANewScheduleResponseStatusL #-}

-- | 'nANewScheduleResponseBody' Lens
nANewScheduleResponseBodyL :: Lens_' NANewScheduleResponse (Maybe NANewScheduleBody)
nANewScheduleResponseBodyL f NANewScheduleResponse{..} = (\nANewScheduleResponseBody -> NANewScheduleResponse { nANewScheduleResponseBody, ..} ) <$> f nANewScheduleResponseBody
{-# INLINE nANewScheduleResponseBodyL #-}

-- | 'nANewScheduleResponseTimeExec' Lens
nANewScheduleResponseTimeExecL :: Lens_' NANewScheduleResponse (Maybe Double)
nANewScheduleResponseTimeExecL f NANewScheduleResponse{..} = (\nANewScheduleResponseTimeExec -> NANewScheduleResponse { nANewScheduleResponseTimeExec, ..} ) <$> f nANewScheduleResponseTimeExec
{-# INLINE nANewScheduleResponseTimeExecL #-}

-- | 'nANewScheduleResponseTimeServer' Lens
nANewScheduleResponseTimeServerL :: Lens_' NANewScheduleResponse (Maybe Int)
nANewScheduleResponseTimeServerL f NANewScheduleResponse{..} = (\nANewScheduleResponseTimeServer -> NANewScheduleResponse { nANewScheduleResponseTimeServer, ..} ) <$> f nANewScheduleResponseTimeServer
{-# INLINE nANewScheduleResponseTimeServerL #-}



-- * NAObject

-- | 'nAObjectId' Lens
nAObjectIdL :: Lens_' NAObject (Maybe Text)
nAObjectIdL f NAObject{..} = (\nAObjectId -> NAObject { nAObjectId, ..} ) <$> f nAObjectId
{-# INLINE nAObjectIdL #-}



-- * NAOkResponse

-- | 'nAOkResponseStatus' Lens
nAOkResponseStatusL :: Lens_' NAOkResponse (Maybe Text)
nAOkResponseStatusL f NAOkResponse{..} = (\nAOkResponseStatus -> NAOkResponse { nAOkResponseStatus, ..} ) <$> f nAOkResponseStatus
{-# INLINE nAOkResponseStatusL #-}

-- | 'nAOkResponseTimeExec' Lens
nAOkResponseTimeExecL :: Lens_' NAOkResponse (Maybe Double)
nAOkResponseTimeExecL f NAOkResponse{..} = (\nAOkResponseTimeExec -> NAOkResponse { nAOkResponseTimeExec, ..} ) <$> f nAOkResponseTimeExec
{-# INLINE nAOkResponseTimeExecL #-}

-- | 'nAOkResponseTimeServer' Lens
nAOkResponseTimeServerL :: Lens_' NAOkResponse (Maybe Int)
nAOkResponseTimeServerL f NAOkResponse{..} = (\nAOkResponseTimeServer -> NAOkResponse { nAOkResponseTimeServer, ..} ) <$> f nAOkResponseTimeServer
{-# INLINE nAOkResponseTimeServerL #-}

-- | 'nAOkResponseBody' Lens
nAOkResponseBodyL :: Lens_' NAOkResponse (Maybe Text)
nAOkResponseBodyL f NAOkResponse{..} = (\nAOkResponseBody -> NAOkResponse { nAOkResponseBody, ..} ) <$> f nAOkResponseBody
{-# INLINE nAOkResponseBodyL #-}



-- * NAPartnerDevicesResponse

-- | 'nAPartnerDevicesResponseStatus' Lens
nAPartnerDevicesResponseStatusL :: Lens_' NAPartnerDevicesResponse (Maybe Text)
nAPartnerDevicesResponseStatusL f NAPartnerDevicesResponse{..} = (\nAPartnerDevicesResponseStatus -> NAPartnerDevicesResponse { nAPartnerDevicesResponseStatus, ..} ) <$> f nAPartnerDevicesResponseStatus
{-# INLINE nAPartnerDevicesResponseStatusL #-}

-- | 'nAPartnerDevicesResponseBody' Lens
nAPartnerDevicesResponseBodyL :: Lens_' NAPartnerDevicesResponse (Maybe [Text])
nAPartnerDevicesResponseBodyL f NAPartnerDevicesResponse{..} = (\nAPartnerDevicesResponseBody -> NAPartnerDevicesResponse { nAPartnerDevicesResponseBody, ..} ) <$> f nAPartnerDevicesResponseBody
{-# INLINE nAPartnerDevicesResponseBodyL #-}

-- | 'nAPartnerDevicesResponseTimeExec' Lens
nAPartnerDevicesResponseTimeExecL :: Lens_' NAPartnerDevicesResponse (Maybe Double)
nAPartnerDevicesResponseTimeExecL f NAPartnerDevicesResponse{..} = (\nAPartnerDevicesResponseTimeExec -> NAPartnerDevicesResponse { nAPartnerDevicesResponseTimeExec, ..} ) <$> f nAPartnerDevicesResponseTimeExec
{-# INLINE nAPartnerDevicesResponseTimeExecL #-}

-- | 'nAPartnerDevicesResponseTimeServer' Lens
nAPartnerDevicesResponseTimeServerL :: Lens_' NAPartnerDevicesResponse (Maybe Int)
nAPartnerDevicesResponseTimeServerL f NAPartnerDevicesResponse{..} = (\nAPartnerDevicesResponseTimeServer -> NAPartnerDevicesResponse { nAPartnerDevicesResponseTimeServer, ..} ) <$> f nAPartnerDevicesResponseTimeServer
{-# INLINE nAPartnerDevicesResponseTimeServerL #-}



-- * NAPidAlgo

-- | 'nAPidAlgoGain' Lens
nAPidAlgoGainL :: Lens_' NAPidAlgo (Maybe Int)
nAPidAlgoGainL f NAPidAlgo{..} = (\nAPidAlgoGain -> NAPidAlgo { nAPidAlgoGain, ..} ) <$> f nAPidAlgoGain
{-# INLINE nAPidAlgoGainL #-}

-- | 'nAPidAlgoPeriod' Lens
nAPidAlgoPeriodL :: Lens_' NAPidAlgo (Maybe Int)
nAPidAlgoPeriodL f NAPidAlgo{..} = (\nAPidAlgoPeriod -> NAPidAlgo { nAPidAlgoPeriod, ..} ) <$> f nAPidAlgoPeriod
{-# INLINE nAPidAlgoPeriodL #-}

-- | 'nAPidAlgoTd' Lens
nAPidAlgoTdL :: Lens_' NAPidAlgo (Maybe Int)
nAPidAlgoTdL f NAPidAlgo{..} = (\nAPidAlgoTd -> NAPidAlgo { nAPidAlgoTd, ..} ) <$> f nAPidAlgoTd
{-# INLINE nAPidAlgoTdL #-}

-- | 'nAPidAlgoTi' Lens
nAPidAlgoTiL :: Lens_' NAPidAlgo (Maybe Int)
nAPidAlgoTiL f NAPidAlgo{..} = (\nAPidAlgoTi -> NAPidAlgo { nAPidAlgoTi, ..} ) <$> f nAPidAlgoTi
{-# INLINE nAPidAlgoTiL #-}



-- * NAPlace

-- | 'nAPlaceCity' Lens
nAPlaceCityL :: Lens_' NAPlace (Maybe Text)
nAPlaceCityL f NAPlace{..} = (\nAPlaceCity -> NAPlace { nAPlaceCity, ..} ) <$> f nAPlaceCity
{-# INLINE nAPlaceCityL #-}

-- | 'nAPlaceAltitude' Lens
nAPlaceAltitudeL :: Lens_' NAPlace (Maybe Float)
nAPlaceAltitudeL f NAPlace{..} = (\nAPlaceAltitude -> NAPlace { nAPlaceAltitude, ..} ) <$> f nAPlaceAltitude
{-# INLINE nAPlaceAltitudeL #-}

-- | 'nAPlaceCountry' Lens
nAPlaceCountryL :: Lens_' NAPlace (Maybe Text)
nAPlaceCountryL f NAPlace{..} = (\nAPlaceCountry -> NAPlace { nAPlaceCountry, ..} ) <$> f nAPlaceCountry
{-# INLINE nAPlaceCountryL #-}

-- | 'nAPlaceFromIp' Lens
nAPlaceFromIpL :: Lens_' NAPlace (Maybe Bool)
nAPlaceFromIpL f NAPlace{..} = (\nAPlaceFromIp -> NAPlace { nAPlaceFromIp, ..} ) <$> f nAPlaceFromIp
{-# INLINE nAPlaceFromIpL #-}

-- | 'nAPlaceImproveLocProposed' Lens
nAPlaceImproveLocProposedL :: Lens_' NAPlace (Maybe Bool)
nAPlaceImproveLocProposedL f NAPlace{..} = (\nAPlaceImproveLocProposed -> NAPlace { nAPlaceImproveLocProposed, ..} ) <$> f nAPlaceImproveLocProposed
{-# INLINE nAPlaceImproveLocProposedL #-}

-- | 'nAPlaceLocation' Lens
nAPlaceLocationL :: Lens_' NAPlace (Maybe [Double])
nAPlaceLocationL f NAPlace{..} = (\nAPlaceLocation -> NAPlace { nAPlaceLocation, ..} ) <$> f nAPlaceLocation
{-# INLINE nAPlaceLocationL #-}

-- | 'nAPlaceTimezone' Lens
nAPlaceTimezoneL :: Lens_' NAPlace (Maybe Text)
nAPlaceTimezoneL f NAPlace{..} = (\nAPlaceTimezone -> NAPlace { nAPlaceTimezone, ..} ) <$> f nAPlaceTimezone
{-# INLINE nAPlaceTimezoneL #-}

-- | 'nAPlaceTrustLocation' Lens
nAPlaceTrustLocationL :: Lens_' NAPlace (Maybe Bool)
nAPlaceTrustLocationL f NAPlace{..} = (\nAPlaceTrustLocation -> NAPlace { nAPlaceTrustLocation, ..} ) <$> f nAPlaceTrustLocation
{-# INLINE nAPlaceTrustLocationL #-}



-- * NAPlug

-- | 'nAPlugId' Lens
nAPlugIdL :: Lens_' NAPlug (Maybe Text)
nAPlugIdL f NAPlug{..} = (\nAPlugId -> NAPlug { nAPlugId, ..} ) <$> f nAPlugId
{-# INLINE nAPlugIdL #-}

-- | 'nAPlugFirmware' Lens
nAPlugFirmwareL :: Lens_' NAPlug (Maybe Int)
nAPlugFirmwareL f NAPlug{..} = (\nAPlugFirmware -> NAPlug { nAPlugFirmware, ..} ) <$> f nAPlugFirmware
{-# INLINE nAPlugFirmwareL #-}

-- | 'nAPlugLastStatusStore' Lens
nAPlugLastStatusStoreL :: Lens_' NAPlug (Maybe Int)
nAPlugLastStatusStoreL f NAPlug{..} = (\nAPlugLastStatusStore -> NAPlug { nAPlugLastStatusStore, ..} ) <$> f nAPlugLastStatusStore
{-# INLINE nAPlugLastStatusStoreL #-}

-- | 'nAPlugPlace' Lens
nAPlugPlaceL :: Lens_' NAPlug (Maybe NAPlace)
nAPlugPlaceL f NAPlug{..} = (\nAPlugPlace -> NAPlug { nAPlugPlace, ..} ) <$> f nAPlugPlace
{-# INLINE nAPlugPlaceL #-}

-- | 'nAPlugStationName' Lens
nAPlugStationNameL :: Lens_' NAPlug (Maybe Text)
nAPlugStationNameL f NAPlug{..} = (\nAPlugStationName -> NAPlug { nAPlugStationName, ..} ) <$> f nAPlugStationName
{-# INLINE nAPlugStationNameL #-}

-- | 'nAPlugType' Lens
nAPlugTypeL :: Lens_' NAPlug (Maybe Text)
nAPlugTypeL f NAPlug{..} = (\nAPlugType -> NAPlug { nAPlugType, ..} ) <$> f nAPlugType
{-# INLINE nAPlugTypeL #-}

-- | 'nAPlugWifiStatus' Lens
nAPlugWifiStatusL :: Lens_' NAPlug (Maybe Int)
nAPlugWifiStatusL f NAPlug{..} = (\nAPlugWifiStatus -> NAPlug { nAPlugWifiStatus, ..} ) <$> f nAPlugWifiStatus
{-# INLINE nAPlugWifiStatusL #-}

-- | 'nAPlugPlugConnectedBoiler' Lens
nAPlugPlugConnectedBoilerL :: Lens_' NAPlug (Maybe Int)
nAPlugPlugConnectedBoilerL f NAPlug{..} = (\nAPlugPlugConnectedBoiler -> NAPlug { nAPlugPlugConnectedBoiler, ..} ) <$> f nAPlugPlugConnectedBoiler
{-# INLINE nAPlugPlugConnectedBoilerL #-}

-- | 'nAPlugUdpConn' Lens
nAPlugUdpConnL :: Lens_' NAPlug (Maybe Bool)
nAPlugUdpConnL f NAPlug{..} = (\nAPlugUdpConn -> NAPlug { nAPlugUdpConn, ..} ) <$> f nAPlugUdpConn
{-# INLINE nAPlugUdpConnL #-}

-- | 'nAPlugLastPlugSeen' Lens
nAPlugLastPlugSeenL :: Lens_' NAPlug (Maybe Int)
nAPlugLastPlugSeenL f NAPlug{..} = (\nAPlugLastPlugSeen -> NAPlug { nAPlugLastPlugSeen, ..} ) <$> f nAPlugLastPlugSeen
{-# INLINE nAPlugLastPlugSeenL #-}

-- | 'nAPlugLastBilan' Lens
nAPlugLastBilanL :: Lens_' NAPlug (Maybe NAYearMonth)
nAPlugLastBilanL f NAPlug{..} = (\nAPlugLastBilan -> NAPlug { nAPlugLastBilan, ..} ) <$> f nAPlugLastBilan
{-# INLINE nAPlugLastBilanL #-}

-- | 'nAPlugModules' Lens
nAPlugModulesL :: Lens_' NAPlug (Maybe [NAThermostat])
nAPlugModulesL f NAPlug{..} = (\nAPlugModules -> NAPlug { nAPlugModules, ..} ) <$> f nAPlugModules
{-# INLINE nAPlugModulesL #-}

-- | 'nAPlugSyncing' Lens
nAPlugSyncingL :: Lens_' NAPlug (Maybe Bool)
nAPlugSyncingL f NAPlug{..} = (\nAPlugSyncing -> NAPlug { nAPlugSyncing, ..} ) <$> f nAPlugSyncing
{-# INLINE nAPlugSyncingL #-}



-- * NAPublicData

-- | 'nAPublicDataId' Lens
nAPublicDataIdL :: Lens_' NAPublicData (Maybe Text)
nAPublicDataIdL f NAPublicData{..} = (\nAPublicDataId -> NAPublicData { nAPublicDataId, ..} ) <$> f nAPublicDataId
{-# INLINE nAPublicDataIdL #-}

-- | 'nAPublicDataPlace' Lens
nAPublicDataPlaceL :: Lens_' NAPublicData (Maybe NAPlace)
nAPublicDataPlaceL f NAPublicData{..} = (\nAPublicDataPlace -> NAPublicData { nAPublicDataPlace, ..} ) <$> f nAPublicDataPlace
{-# INLINE nAPublicDataPlaceL #-}

-- | 'nAPublicDataMark' Lens
nAPublicDataMarkL :: Lens_' NAPublicData (Maybe Int)
nAPublicDataMarkL f NAPublicData{..} = (\nAPublicDataMark -> NAPublicData { nAPublicDataMark, ..} ) <$> f nAPublicDataMark
{-# INLINE nAPublicDataMarkL #-}

-- | 'nAPublicDataModules' Lens
nAPublicDataModulesL :: Lens_' NAPublicData (Maybe [Text])
nAPublicDataModulesL f NAPublicData{..} = (\nAPublicDataModules -> NAPublicData { nAPublicDataModules, ..} ) <$> f nAPublicDataModules
{-# INLINE nAPublicDataModulesL #-}

-- | 'nAPublicDataModuleTypes' Lens
nAPublicDataModuleTypesL :: Lens_' NAPublicData (Maybe (Map.Map String Text))
nAPublicDataModuleTypesL f NAPublicData{..} = (\nAPublicDataModuleTypes -> NAPublicData { nAPublicDataModuleTypes, ..} ) <$> f nAPublicDataModuleTypes
{-# INLINE nAPublicDataModuleTypesL #-}

-- | 'nAPublicDataMeasures' Lens
nAPublicDataMeasuresL :: Lens_' NAPublicData (Maybe (Map.Map String NAMeasure))
nAPublicDataMeasuresL f NAPublicData{..} = (\nAPublicDataMeasures -> NAPublicData { nAPublicDataMeasures, ..} ) <$> f nAPublicDataMeasures
{-# INLINE nAPublicDataMeasuresL #-}



-- * NAPublicDataResponse

-- | 'nAPublicDataResponseStatus' Lens
nAPublicDataResponseStatusL :: Lens_' NAPublicDataResponse (Maybe Text)
nAPublicDataResponseStatusL f NAPublicDataResponse{..} = (\nAPublicDataResponseStatus -> NAPublicDataResponse { nAPublicDataResponseStatus, ..} ) <$> f nAPublicDataResponseStatus
{-# INLINE nAPublicDataResponseStatusL #-}

-- | 'nAPublicDataResponseBody' Lens
nAPublicDataResponseBodyL :: Lens_' NAPublicDataResponse (Maybe [NAPublicData])
nAPublicDataResponseBodyL f NAPublicDataResponse{..} = (\nAPublicDataResponseBody -> NAPublicDataResponse { nAPublicDataResponseBody, ..} ) <$> f nAPublicDataResponseBody
{-# INLINE nAPublicDataResponseBodyL #-}

-- | 'nAPublicDataResponseTimeExec' Lens
nAPublicDataResponseTimeExecL :: Lens_' NAPublicDataResponse (Maybe Double)
nAPublicDataResponseTimeExecL f NAPublicDataResponse{..} = (\nAPublicDataResponseTimeExec -> NAPublicDataResponse { nAPublicDataResponseTimeExec, ..} ) <$> f nAPublicDataResponseTimeExec
{-# INLINE nAPublicDataResponseTimeExecL #-}

-- | 'nAPublicDataResponseTimeServer' Lens
nAPublicDataResponseTimeServerL :: Lens_' NAPublicDataResponse (Maybe Int)
nAPublicDataResponseTimeServerL f NAPublicDataResponse{..} = (\nAPublicDataResponseTimeServer -> NAPublicDataResponse { nAPublicDataResponseTimeServer, ..} ) <$> f nAPublicDataResponseTimeServer
{-# INLINE nAPublicDataResponseTimeServerL #-}



-- * NASetpoint

-- | 'nASetpointSetpointTemp' Lens
nASetpointSetpointTempL :: Lens_' NASetpoint (Maybe Float)
nASetpointSetpointTempL f NASetpoint{..} = (\nASetpointSetpointTemp -> NASetpoint { nASetpointSetpointTemp, ..} ) <$> f nASetpointSetpointTemp
{-# INLINE nASetpointSetpointTempL #-}

-- | 'nASetpointSetpointEndtime' Lens
nASetpointSetpointEndtimeL :: Lens_' NASetpoint (Maybe Int)
nASetpointSetpointEndtimeL f NASetpoint{..} = (\nASetpointSetpointEndtime -> NASetpoint { nASetpointSetpointEndtime, ..} ) <$> f nASetpointSetpointEndtime
{-# INLINE nASetpointSetpointEndtimeL #-}

-- | 'nASetpointSetpointMode' Lens
nASetpointSetpointModeL :: Lens_' NASetpoint (Maybe Text)
nASetpointSetpointModeL f NASetpoint{..} = (\nASetpointSetpointMode -> NASetpoint { nASetpointSetpointMode, ..} ) <$> f nASetpointSetpointMode
{-# INLINE nASetpointSetpointModeL #-}



-- * NASetpointLog

-- | 'nASetpointLogSetpoint' Lens
nASetpointLogSetpointL :: Lens_' NASetpointLog (Maybe NASetpoint)
nASetpointLogSetpointL f NASetpointLog{..} = (\nASetpointLogSetpoint -> NASetpointLog { nASetpointLogSetpoint, ..} ) <$> f nASetpointLogSetpoint
{-# INLINE nASetpointLogSetpointL #-}

-- | 'nASetpointLogTimestamp' Lens
nASetpointLogTimestampL :: Lens_' NASetpointLog (Maybe Integer)
nASetpointLogTimestampL f NASetpointLog{..} = (\nASetpointLogTimestamp -> NASetpointLog { nASetpointLogTimestamp, ..} ) <$> f nASetpointLogTimestamp
{-# INLINE nASetpointLogTimestampL #-}



-- * NASimpleAlgo

-- | 'nASimpleAlgoHighDeadband' Lens
nASimpleAlgoHighDeadbandL :: Lens_' NASimpleAlgo (Maybe Int)
nASimpleAlgoHighDeadbandL f NASimpleAlgo{..} = (\nASimpleAlgoHighDeadband -> NASimpleAlgo { nASimpleAlgoHighDeadband, ..} ) <$> f nASimpleAlgoHighDeadband
{-# INLINE nASimpleAlgoHighDeadbandL #-}



-- * NAStation

-- | 'nAStationLagDown' Lens
nAStationLagDownL :: Lens_' NAStation (Maybe Int)
nAStationLagDownL f NAStation{..} = (\nAStationLagDown -> NAStation { nAStationLagDown, ..} ) <$> f nAStationLagDown
{-# INLINE nAStationLagDownL #-}

-- | 'nAStationLagUp' Lens
nAStationLagUpL :: Lens_' NAStation (Maybe Int)
nAStationLagUpL f NAStation{..} = (\nAStationLagUp -> NAStation { nAStationLagUp, ..} ) <$> f nAStationLagUp
{-# INLINE nAStationLagUpL #-}

-- | 'nAStationOffOvershoot' Lens
nAStationOffOvershootL :: Lens_' NAStation (Maybe Float)
nAStationOffOvershootL f NAStation{..} = (\nAStationOffOvershoot -> NAStation { nAStationOffOvershoot, ..} ) <$> f nAStationOffOvershoot
{-# INLINE nAStationOffOvershootL #-}

-- | 'nAStationOnOvershoot' Lens
nAStationOnOvershootL :: Lens_' NAStation (Maybe Float)
nAStationOnOvershootL f NAStation{..} = (\nAStationOnOvershoot -> NAStation { nAStationOnOvershoot, ..} ) <$> f nAStationOnOvershoot
{-# INLINE nAStationOnOvershootL #-}

-- | 'nAStationPk' Lens
nAStationPkL :: Lens_' NAStation (Maybe Int)
nAStationPkL f NAStation{..} = (\nAStationPk -> NAStation { nAStationPk, ..} ) <$> f nAStationPk
{-# INLINE nAStationPkL #-}

-- | 'nAStationTau' Lens
nAStationTauL :: Lens_' NAStation (Maybe Int)
nAStationTauL f NAStation{..} = (\nAStationTau -> NAStation { nAStationTau, ..} ) <$> f nAStationTau
{-# INLINE nAStationTauL #-}



-- * NAStationDataBody

-- | 'nAStationDataBodyDevices' Lens
nAStationDataBodyDevicesL :: Lens_' NAStationDataBody (Maybe [NAMain])
nAStationDataBodyDevicesL f NAStationDataBody{..} = (\nAStationDataBodyDevices -> NAStationDataBody { nAStationDataBodyDevices, ..} ) <$> f nAStationDataBodyDevices
{-# INLINE nAStationDataBodyDevicesL #-}

-- | 'nAStationDataBodyUser' Lens
nAStationDataBodyUserL :: Lens_' NAStationDataBody (Maybe NAUser)
nAStationDataBodyUserL f NAStationDataBody{..} = (\nAStationDataBodyUser -> NAStationDataBody { nAStationDataBodyUser, ..} ) <$> f nAStationDataBodyUser
{-# INLINE nAStationDataBodyUserL #-}



-- * NAStationDataResponse

-- | 'nAStationDataResponseStatus' Lens
nAStationDataResponseStatusL :: Lens_' NAStationDataResponse (Maybe Text)
nAStationDataResponseStatusL f NAStationDataResponse{..} = (\nAStationDataResponseStatus -> NAStationDataResponse { nAStationDataResponseStatus, ..} ) <$> f nAStationDataResponseStatus
{-# INLINE nAStationDataResponseStatusL #-}

-- | 'nAStationDataResponseBody' Lens
nAStationDataResponseBodyL :: Lens_' NAStationDataResponse (Maybe NAStationDataBody)
nAStationDataResponseBodyL f NAStationDataResponse{..} = (\nAStationDataResponseBody -> NAStationDataResponse { nAStationDataResponseBody, ..} ) <$> f nAStationDataResponseBody
{-# INLINE nAStationDataResponseBodyL #-}

-- | 'nAStationDataResponseTimeExec' Lens
nAStationDataResponseTimeExecL :: Lens_' NAStationDataResponse (Maybe Double)
nAStationDataResponseTimeExecL f NAStationDataResponse{..} = (\nAStationDataResponseTimeExec -> NAStationDataResponse { nAStationDataResponseTimeExec, ..} ) <$> f nAStationDataResponseTimeExec
{-# INLINE nAStationDataResponseTimeExecL #-}

-- | 'nAStationDataResponseTimeServer' Lens
nAStationDataResponseTimeServerL :: Lens_' NAStationDataResponse (Maybe Int)
nAStationDataResponseTimeServerL f NAStationDataResponse{..} = (\nAStationDataResponseTimeServer -> NAStationDataResponse { nAStationDataResponseTimeServer, ..} ) <$> f nAStationDataResponseTimeServer
{-# INLINE nAStationDataResponseTimeServerL #-}



-- * NAStationModule

-- | 'nAStationModuleId' Lens
nAStationModuleIdL :: Lens_' NAStationModule (Maybe Text)
nAStationModuleIdL f NAStationModule{..} = (\nAStationModuleId -> NAStationModule { nAStationModuleId, ..} ) <$> f nAStationModuleId
{-# INLINE nAStationModuleIdL #-}

-- | 'nAStationModuleType' Lens
nAStationModuleTypeL :: Lens_' NAStationModule (Maybe Text)
nAStationModuleTypeL f NAStationModule{..} = (\nAStationModuleType -> NAStationModule { nAStationModuleType, ..} ) <$> f nAStationModuleType
{-# INLINE nAStationModuleTypeL #-}

-- | 'nAStationModuleLastMessage' Lens
nAStationModuleLastMessageL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleLastMessageL f NAStationModule{..} = (\nAStationModuleLastMessage -> NAStationModule { nAStationModuleLastMessage, ..} ) <$> f nAStationModuleLastMessage
{-# INLINE nAStationModuleLastMessageL #-}

-- | 'nAStationModuleLastSeen' Lens
nAStationModuleLastSeenL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleLastSeenL f NAStationModule{..} = (\nAStationModuleLastSeen -> NAStationModule { nAStationModuleLastSeen, ..} ) <$> f nAStationModuleLastSeen
{-# INLINE nAStationModuleLastSeenL #-}

-- | 'nAStationModuleDashboardData' Lens
nAStationModuleDashboardDataL :: Lens_' NAStationModule (Maybe NADashboardData)
nAStationModuleDashboardDataL f NAStationModule{..} = (\nAStationModuleDashboardData -> NAStationModule { nAStationModuleDashboardData, ..} ) <$> f nAStationModuleDashboardData
{-# INLINE nAStationModuleDashboardDataL #-}

-- | 'nAStationModuleDataType' Lens
nAStationModuleDataTypeL :: Lens_' NAStationModule (Maybe [Text])
nAStationModuleDataTypeL f NAStationModule{..} = (\nAStationModuleDataType -> NAStationModule { nAStationModuleDataType, ..} ) <$> f nAStationModuleDataType
{-# INLINE nAStationModuleDataTypeL #-}

-- | 'nAStationModuleModuleName' Lens
nAStationModuleModuleNameL :: Lens_' NAStationModule (Maybe Text)
nAStationModuleModuleNameL f NAStationModule{..} = (\nAStationModuleModuleName -> NAStationModule { nAStationModuleModuleName, ..} ) <$> f nAStationModuleModuleName
{-# INLINE nAStationModuleModuleNameL #-}

-- | 'nAStationModuleLastSetup' Lens
nAStationModuleLastSetupL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleLastSetupL f NAStationModule{..} = (\nAStationModuleLastSetup -> NAStationModule { nAStationModuleLastSetup, ..} ) <$> f nAStationModuleLastSetup
{-# INLINE nAStationModuleLastSetupL #-}

-- | 'nAStationModuleBatteryVp' Lens
nAStationModuleBatteryVpL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleBatteryVpL f NAStationModule{..} = (\nAStationModuleBatteryVp -> NAStationModule { nAStationModuleBatteryVp, ..} ) <$> f nAStationModuleBatteryVp
{-# INLINE nAStationModuleBatteryVpL #-}

-- | 'nAStationModuleBatteryPercent' Lens
nAStationModuleBatteryPercentL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleBatteryPercentL f NAStationModule{..} = (\nAStationModuleBatteryPercent -> NAStationModule { nAStationModuleBatteryPercent, ..} ) <$> f nAStationModuleBatteryPercent
{-# INLINE nAStationModuleBatteryPercentL #-}

-- | 'nAStationModuleRfStatus' Lens
nAStationModuleRfStatusL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleRfStatusL f NAStationModule{..} = (\nAStationModuleRfStatus -> NAStationModule { nAStationModuleRfStatus, ..} ) <$> f nAStationModuleRfStatus
{-# INLINE nAStationModuleRfStatusL #-}

-- | 'nAStationModuleFirmware' Lens
nAStationModuleFirmwareL :: Lens_' NAStationModule (Maybe Int)
nAStationModuleFirmwareL f NAStationModule{..} = (\nAStationModuleFirmware -> NAStationModule { nAStationModuleFirmware, ..} ) <$> f nAStationModuleFirmware
{-# INLINE nAStationModuleFirmwareL #-}



-- * NAThermMeasure

-- | 'nAThermMeasureTime' Lens
nAThermMeasureTimeL :: Lens_' NAThermMeasure (Maybe Int)
nAThermMeasureTimeL f NAThermMeasure{..} = (\nAThermMeasureTime -> NAThermMeasure { nAThermMeasureTime, ..} ) <$> f nAThermMeasureTime
{-# INLINE nAThermMeasureTimeL #-}

-- | 'nAThermMeasureTemperature' Lens
nAThermMeasureTemperatureL :: Lens_' NAThermMeasure (Maybe Float)
nAThermMeasureTemperatureL f NAThermMeasure{..} = (\nAThermMeasureTemperature -> NAThermMeasure { nAThermMeasureTemperature, ..} ) <$> f nAThermMeasureTemperature
{-# INLINE nAThermMeasureTemperatureL #-}

-- | 'nAThermMeasureSetpointTemp' Lens
nAThermMeasureSetpointTempL :: Lens_' NAThermMeasure (Maybe Float)
nAThermMeasureSetpointTempL f NAThermMeasure{..} = (\nAThermMeasureSetpointTemp -> NAThermMeasure { nAThermMeasureSetpointTemp, ..} ) <$> f nAThermMeasureSetpointTemp
{-# INLINE nAThermMeasureSetpointTempL #-}



-- * NAThermProgram

-- | 'nAThermProgramProgramId' Lens
nAThermProgramProgramIdL :: Lens_' NAThermProgram (Maybe Text)
nAThermProgramProgramIdL f NAThermProgram{..} = (\nAThermProgramProgramId -> NAThermProgram { nAThermProgramProgramId, ..} ) <$> f nAThermProgramProgramId
{-# INLINE nAThermProgramProgramIdL #-}

-- | 'nAThermProgramName' Lens
nAThermProgramNameL :: Lens_' NAThermProgram (Maybe Text)
nAThermProgramNameL f NAThermProgram{..} = (\nAThermProgramName -> NAThermProgram { nAThermProgramName, ..} ) <$> f nAThermProgramName
{-# INLINE nAThermProgramNameL #-}

-- | 'nAThermProgramZones' Lens
nAThermProgramZonesL :: Lens_' NAThermProgram (Maybe [NAZone])
nAThermProgramZonesL f NAThermProgram{..} = (\nAThermProgramZones -> NAThermProgram { nAThermProgramZones, ..} ) <$> f nAThermProgramZones
{-# INLINE nAThermProgramZonesL #-}

-- | 'nAThermProgramTimetable' Lens
nAThermProgramTimetableL :: Lens_' NAThermProgram (Maybe [NATimeTableItem])
nAThermProgramTimetableL f NAThermProgram{..} = (\nAThermProgramTimetable -> NAThermProgram { nAThermProgramTimetable, ..} ) <$> f nAThermProgramTimetable
{-# INLINE nAThermProgramTimetableL #-}

-- | 'nAThermProgramSelected' Lens
nAThermProgramSelectedL :: Lens_' NAThermProgram (Maybe Bool)
nAThermProgramSelectedL f NAThermProgram{..} = (\nAThermProgramSelected -> NAThermProgram { nAThermProgramSelected, ..} ) <$> f nAThermProgramSelected
{-# INLINE nAThermProgramSelectedL #-}



-- * NAThermStateBody

-- | 'nAThermStateBodySetpoint' Lens
nAThermStateBodySetpointL :: Lens_' NAThermStateBody (Maybe NASetpoint)
nAThermStateBodySetpointL f NAThermStateBody{..} = (\nAThermStateBodySetpoint -> NAThermStateBody { nAThermStateBodySetpoint, ..} ) <$> f nAThermStateBodySetpoint
{-# INLINE nAThermStateBodySetpointL #-}

-- | 'nAThermStateBodySetpointOrder' Lens
nAThermStateBodySetpointOrderL :: Lens_' NAThermStateBody (Maybe NASetpoint)
nAThermStateBodySetpointOrderL f NAThermStateBody{..} = (\nAThermStateBodySetpointOrder -> NAThermStateBody { nAThermStateBodySetpointOrder, ..} ) <$> f nAThermStateBodySetpointOrder
{-# INLINE nAThermStateBodySetpointOrderL #-}

-- | 'nAThermStateBodyThermProgram' Lens
nAThermStateBodyThermProgramL :: Lens_' NAThermStateBody (Maybe NAThermProgram)
nAThermStateBodyThermProgramL f NAThermStateBody{..} = (\nAThermStateBodyThermProgram -> NAThermStateBody { nAThermStateBodyThermProgram, ..} ) <$> f nAThermStateBodyThermProgram
{-# INLINE nAThermStateBodyThermProgramL #-}

-- | 'nAThermStateBodyThermProgramBackup' Lens
nAThermStateBodyThermProgramBackupL :: Lens_' NAThermStateBody (Maybe [NAThermProgram])
nAThermStateBodyThermProgramBackupL f NAThermStateBody{..} = (\nAThermStateBodyThermProgramBackup -> NAThermStateBody { nAThermStateBodyThermProgramBackup, ..} ) <$> f nAThermStateBodyThermProgramBackup
{-# INLINE nAThermStateBodyThermProgramBackupL #-}

-- | 'nAThermStateBodyThermProgramOrder' Lens
nAThermStateBodyThermProgramOrderL :: Lens_' NAThermStateBody (Maybe NAThermProgram)
nAThermStateBodyThermProgramOrderL f NAThermStateBody{..} = (\nAThermStateBodyThermProgramOrder -> NAThermStateBody { nAThermStateBodyThermProgramOrder, ..} ) <$> f nAThermStateBodyThermProgramOrder
{-# INLINE nAThermStateBodyThermProgramOrderL #-}

-- | 'nAThermStateBodyThermOrientation' Lens
nAThermStateBodyThermOrientationL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyThermOrientationL f NAThermStateBody{..} = (\nAThermStateBodyThermOrientation -> NAThermStateBody { nAThermStateBodyThermOrientation, ..} ) <$> f nAThermStateBodyThermOrientation
{-# INLINE nAThermStateBodyThermOrientationL #-}

-- | 'nAThermStateBodyThermRelayCmd' Lens
nAThermStateBodyThermRelayCmdL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyThermRelayCmdL f NAThermStateBody{..} = (\nAThermStateBodyThermRelayCmd -> NAThermStateBody { nAThermStateBodyThermRelayCmd, ..} ) <$> f nAThermStateBodyThermRelayCmd
{-# INLINE nAThermStateBodyThermRelayCmdL #-}

-- | 'nAThermStateBodyBatteryVp' Lens
nAThermStateBodyBatteryVpL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyBatteryVpL f NAThermStateBody{..} = (\nAThermStateBodyBatteryVp -> NAThermStateBody { nAThermStateBodyBatteryVp, ..} ) <$> f nAThermStateBodyBatteryVp
{-# INLINE nAThermStateBodyBatteryVpL #-}

-- | 'nAThermStateBodyBatteryPercent' Lens
nAThermStateBodyBatteryPercentL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyBatteryPercentL f NAThermStateBody{..} = (\nAThermStateBodyBatteryPercent -> NAThermStateBody { nAThermStateBodyBatteryPercent, ..} ) <$> f nAThermStateBodyBatteryPercent
{-# INLINE nAThermStateBodyBatteryPercentL #-}

-- | 'nAThermStateBodyRfStatus' Lens
nAThermStateBodyRfStatusL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyRfStatusL f NAThermStateBody{..} = (\nAThermStateBodyRfStatus -> NAThermStateBody { nAThermStateBodyRfStatus, ..} ) <$> f nAThermStateBodyRfStatus
{-# INLINE nAThermStateBodyRfStatusL #-}

-- | 'nAThermStateBodyPlugConnectedBoiler' Lens
nAThermStateBodyPlugConnectedBoilerL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyPlugConnectedBoilerL f NAThermStateBody{..} = (\nAThermStateBodyPlugConnectedBoiler -> NAThermStateBody { nAThermStateBodyPlugConnectedBoiler, ..} ) <$> f nAThermStateBodyPlugConnectedBoiler
{-# INLINE nAThermStateBodyPlugConnectedBoilerL #-}

-- | 'nAThermStateBodyUdpConn' Lens
nAThermStateBodyUdpConnL :: Lens_' NAThermStateBody (Maybe Bool)
nAThermStateBodyUdpConnL f NAThermStateBody{..} = (\nAThermStateBodyUdpConn -> NAThermStateBody { nAThermStateBodyUdpConn, ..} ) <$> f nAThermStateBodyUdpConn
{-# INLINE nAThermStateBodyUdpConnL #-}

-- | 'nAThermStateBodyLastThermSeen' Lens
nAThermStateBodyLastThermSeenL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyLastThermSeenL f NAThermStateBody{..} = (\nAThermStateBodyLastThermSeen -> NAThermStateBody { nAThermStateBodyLastThermSeen, ..} ) <$> f nAThermStateBodyLastThermSeen
{-# INLINE nAThermStateBodyLastThermSeenL #-}

-- | 'nAThermStateBodyLastPlugSeen' Lens
nAThermStateBodyLastPlugSeenL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyLastPlugSeenL f NAThermStateBody{..} = (\nAThermStateBodyLastPlugSeen -> NAThermStateBody { nAThermStateBodyLastPlugSeen, ..} ) <$> f nAThermStateBodyLastPlugSeen
{-# INLINE nAThermStateBodyLastPlugSeenL #-}

-- | 'nAThermStateBodyWifiStatus' Lens
nAThermStateBodyWifiStatusL :: Lens_' NAThermStateBody (Maybe Int)
nAThermStateBodyWifiStatusL f NAThermStateBody{..} = (\nAThermStateBodyWifiStatus -> NAThermStateBody { nAThermStateBodyWifiStatus, ..} ) <$> f nAThermStateBodyWifiStatus
{-# INLINE nAThermStateBodyWifiStatusL #-}

-- | 'nAThermStateBodyMeasured' Lens
nAThermStateBodyMeasuredL :: Lens_' NAThermStateBody (Maybe NAThermMeasure)
nAThermStateBodyMeasuredL f NAThermStateBody{..} = (\nAThermStateBodyMeasured -> NAThermStateBody { nAThermStateBodyMeasured, ..} ) <$> f nAThermStateBodyMeasured
{-# INLINE nAThermStateBodyMeasuredL #-}



-- * NAThermStateResponse

-- | 'nAThermStateResponseStatus' Lens
nAThermStateResponseStatusL :: Lens_' NAThermStateResponse (Maybe Text)
nAThermStateResponseStatusL f NAThermStateResponse{..} = (\nAThermStateResponseStatus -> NAThermStateResponse { nAThermStateResponseStatus, ..} ) <$> f nAThermStateResponseStatus
{-# INLINE nAThermStateResponseStatusL #-}

-- | 'nAThermStateResponseBody' Lens
nAThermStateResponseBodyL :: Lens_' NAThermStateResponse (Maybe NAThermStateBody)
nAThermStateResponseBodyL f NAThermStateResponse{..} = (\nAThermStateResponseBody -> NAThermStateResponse { nAThermStateResponseBody, ..} ) <$> f nAThermStateResponseBody
{-# INLINE nAThermStateResponseBodyL #-}

-- | 'nAThermStateResponseTimeExec' Lens
nAThermStateResponseTimeExecL :: Lens_' NAThermStateResponse (Maybe Double)
nAThermStateResponseTimeExecL f NAThermStateResponse{..} = (\nAThermStateResponseTimeExec -> NAThermStateResponse { nAThermStateResponseTimeExec, ..} ) <$> f nAThermStateResponseTimeExec
{-# INLINE nAThermStateResponseTimeExecL #-}

-- | 'nAThermStateResponseTimeServer' Lens
nAThermStateResponseTimeServerL :: Lens_' NAThermStateResponse (Maybe Int)
nAThermStateResponseTimeServerL f NAThermStateResponse{..} = (\nAThermStateResponseTimeServer -> NAThermStateResponse { nAThermStateResponseTimeServer, ..} ) <$> f nAThermStateResponseTimeServer
{-# INLINE nAThermStateResponseTimeServerL #-}



-- * NAThermostat

-- | 'nAThermostatId' Lens
nAThermostatIdL :: Lens_' NAThermostat (Maybe Text)
nAThermostatIdL f NAThermostat{..} = (\nAThermostatId -> NAThermostat { nAThermostatId, ..} ) <$> f nAThermostatId
{-# INLINE nAThermostatIdL #-}

-- | 'nAThermostatFirmware' Lens
nAThermostatFirmwareL :: Lens_' NAThermostat (Maybe Int)
nAThermostatFirmwareL f NAThermostat{..} = (\nAThermostatFirmware -> NAThermostat { nAThermostatFirmware, ..} ) <$> f nAThermostatFirmware
{-# INLINE nAThermostatFirmwareL #-}

-- | 'nAThermostatType' Lens
nAThermostatTypeL :: Lens_' NAThermostat (Maybe Text)
nAThermostatTypeL f NAThermostat{..} = (\nAThermostatType -> NAThermostat { nAThermostatType, ..} ) <$> f nAThermostatType
{-# INLINE nAThermostatTypeL #-}

-- | 'nAThermostatModuleName' Lens
nAThermostatModuleNameL :: Lens_' NAThermostat (Maybe Text)
nAThermostatModuleNameL f NAThermostat{..} = (\nAThermostatModuleName -> NAThermostat { nAThermostatModuleName, ..} ) <$> f nAThermostatModuleName
{-# INLINE nAThermostatModuleNameL #-}

-- | 'nAThermostatLastMessage' Lens
nAThermostatLastMessageL :: Lens_' NAThermostat (Maybe Int)
nAThermostatLastMessageL f NAThermostat{..} = (\nAThermostatLastMessage -> NAThermostat { nAThermostatLastMessage, ..} ) <$> f nAThermostatLastMessage
{-# INLINE nAThermostatLastMessageL #-}

-- | 'nAThermostatRfStatus' Lens
nAThermostatRfStatusL :: Lens_' NAThermostat (Maybe Int)
nAThermostatRfStatusL f NAThermostat{..} = (\nAThermostatRfStatus -> NAThermostat { nAThermostatRfStatus, ..} ) <$> f nAThermostatRfStatus
{-# INLINE nAThermostatRfStatusL #-}

-- | 'nAThermostatBatteryVp' Lens
nAThermostatBatteryVpL :: Lens_' NAThermostat (Maybe Int)
nAThermostatBatteryVpL f NAThermostat{..} = (\nAThermostatBatteryVp -> NAThermostat { nAThermostatBatteryVp, ..} ) <$> f nAThermostatBatteryVp
{-# INLINE nAThermostatBatteryVpL #-}

-- | 'nAThermostatBatteryPercent' Lens
nAThermostatBatteryPercentL :: Lens_' NAThermostat (Maybe Int)
nAThermostatBatteryPercentL f NAThermostat{..} = (\nAThermostatBatteryPercent -> NAThermostat { nAThermostatBatteryPercent, ..} ) <$> f nAThermostatBatteryPercent
{-# INLINE nAThermostatBatteryPercentL #-}

-- | 'nAThermostatSetpoint' Lens
nAThermostatSetpointL :: Lens_' NAThermostat (Maybe NASetpoint)
nAThermostatSetpointL f NAThermostat{..} = (\nAThermostatSetpoint -> NAThermostat { nAThermostatSetpoint, ..} ) <$> f nAThermostatSetpoint
{-# INLINE nAThermostatSetpointL #-}

-- | 'nAThermostatSetpointOrder' Lens
nAThermostatSetpointOrderL :: Lens_' NAThermostat (Maybe NASetpoint)
nAThermostatSetpointOrderL f NAThermostat{..} = (\nAThermostatSetpointOrder -> NAThermostat { nAThermostatSetpointOrder, ..} ) <$> f nAThermostatSetpointOrder
{-# INLINE nAThermostatSetpointOrderL #-}

-- | 'nAThermostatThermOrientation' Lens
nAThermostatThermOrientationL :: Lens_' NAThermostat (Maybe Int)
nAThermostatThermOrientationL f NAThermostat{..} = (\nAThermostatThermOrientation -> NAThermostat { nAThermostatThermOrientation, ..} ) <$> f nAThermostatThermOrientation
{-# INLINE nAThermostatThermOrientationL #-}

-- | 'nAThermostatThermRelayCmd' Lens
nAThermostatThermRelayCmdL :: Lens_' NAThermostat (Maybe Int)
nAThermostatThermRelayCmdL f NAThermostat{..} = (\nAThermostatThermRelayCmd -> NAThermostat { nAThermostatThermRelayCmd, ..} ) <$> f nAThermostatThermRelayCmd
{-# INLINE nAThermostatThermRelayCmdL #-}

-- | 'nAThermostatLastThermSeen' Lens
nAThermostatLastThermSeenL :: Lens_' NAThermostat (Maybe Int)
nAThermostatLastThermSeenL f NAThermostat{..} = (\nAThermostatLastThermSeen -> NAThermostat { nAThermostatLastThermSeen, ..} ) <$> f nAThermostatLastThermSeen
{-# INLINE nAThermostatLastThermSeenL #-}

-- | 'nAThermostatMeasured' Lens
nAThermostatMeasuredL :: Lens_' NAThermostat (Maybe NAThermMeasure)
nAThermostatMeasuredL f NAThermostat{..} = (\nAThermostatMeasured -> NAThermostat { nAThermostatMeasured, ..} ) <$> f nAThermostatMeasured
{-# INLINE nAThermostatMeasuredL #-}

-- | 'nAThermostatSetpointHistory' Lens
nAThermostatSetpointHistoryL :: Lens_' NAThermostat (Maybe [NASetpointLog])
nAThermostatSetpointHistoryL f NAThermostat{..} = (\nAThermostatSetpointHistory -> NAThermostat { nAThermostatSetpointHistory, ..} ) <$> f nAThermostatSetpointHistory
{-# INLINE nAThermostatSetpointHistoryL #-}

-- | 'nAThermostatThermProgramList' Lens
nAThermostatThermProgramListL :: Lens_' NAThermostat (Maybe [NAThermProgram])
nAThermostatThermProgramListL f NAThermostat{..} = (\nAThermostatThermProgramList -> NAThermostat { nAThermostatThermProgramList, ..} ) <$> f nAThermostatThermProgramList
{-# INLINE nAThermostatThermProgramListL #-}



-- * NAThermostatDataBody

-- | 'nAThermostatDataBodyDevices' Lens
nAThermostatDataBodyDevicesL :: Lens_' NAThermostatDataBody (Maybe [NAPlug])
nAThermostatDataBodyDevicesL f NAThermostatDataBody{..} = (\nAThermostatDataBodyDevices -> NAThermostatDataBody { nAThermostatDataBodyDevices, ..} ) <$> f nAThermostatDataBodyDevices
{-# INLINE nAThermostatDataBodyDevicesL #-}

-- | 'nAThermostatDataBodyUser' Lens
nAThermostatDataBodyUserL :: Lens_' NAThermostatDataBody (Maybe NAUser)
nAThermostatDataBodyUserL f NAThermostatDataBody{..} = (\nAThermostatDataBodyUser -> NAThermostatDataBody { nAThermostatDataBodyUser, ..} ) <$> f nAThermostatDataBodyUser
{-# INLINE nAThermostatDataBodyUserL #-}



-- * NAThermostatDataResponse

-- | 'nAThermostatDataResponseStatus' Lens
nAThermostatDataResponseStatusL :: Lens_' NAThermostatDataResponse (Maybe Text)
nAThermostatDataResponseStatusL f NAThermostatDataResponse{..} = (\nAThermostatDataResponseStatus -> NAThermostatDataResponse { nAThermostatDataResponseStatus, ..} ) <$> f nAThermostatDataResponseStatus
{-# INLINE nAThermostatDataResponseStatusL #-}

-- | 'nAThermostatDataResponseBody' Lens
nAThermostatDataResponseBodyL :: Lens_' NAThermostatDataResponse (Maybe NAThermostatDataBody)
nAThermostatDataResponseBodyL f NAThermostatDataResponse{..} = (\nAThermostatDataResponseBody -> NAThermostatDataResponse { nAThermostatDataResponseBody, ..} ) <$> f nAThermostatDataResponseBody
{-# INLINE nAThermostatDataResponseBodyL #-}

-- | 'nAThermostatDataResponseTimeExec' Lens
nAThermostatDataResponseTimeExecL :: Lens_' NAThermostatDataResponse (Maybe Double)
nAThermostatDataResponseTimeExecL f NAThermostatDataResponse{..} = (\nAThermostatDataResponseTimeExec -> NAThermostatDataResponse { nAThermostatDataResponseTimeExec, ..} ) <$> f nAThermostatDataResponseTimeExec
{-# INLINE nAThermostatDataResponseTimeExecL #-}

-- | 'nAThermostatDataResponseTimeServer' Lens
nAThermostatDataResponseTimeServerL :: Lens_' NAThermostatDataResponse (Maybe Int)
nAThermostatDataResponseTimeServerL f NAThermostatDataResponse{..} = (\nAThermostatDataResponseTimeServer -> NAThermostatDataResponse { nAThermostatDataResponseTimeServer, ..} ) <$> f nAThermostatDataResponseTimeServer
{-# INLINE nAThermostatDataResponseTimeServerL #-}



-- * NATimeTableItem

-- | 'nATimeTableItemId' Lens
nATimeTableItemIdL :: Lens_' NATimeTableItem (Maybe Int)
nATimeTableItemIdL f NATimeTableItem{..} = (\nATimeTableItemId -> NATimeTableItem { nATimeTableItemId, ..} ) <$> f nATimeTableItemId
{-# INLINE nATimeTableItemIdL #-}

-- | 'nATimeTableItemMOffset' Lens
nATimeTableItemMOffsetL :: Lens_' NATimeTableItem (Maybe Int)
nATimeTableItemMOffsetL f NATimeTableItem{..} = (\nATimeTableItemMOffset -> NATimeTableItem { nATimeTableItemMOffset, ..} ) <$> f nATimeTableItemMOffset
{-# INLINE nATimeTableItemMOffsetL #-}



-- * NAUser

-- | 'nAUserId' Lens
nAUserIdL :: Lens_' NAUser (Maybe Text)
nAUserIdL f NAUser{..} = (\nAUserId -> NAUser { nAUserId, ..} ) <$> f nAUserId
{-# INLINE nAUserIdL #-}

-- | 'nAUserAdministrative' Lens
nAUserAdministrativeL :: Lens_' NAUser (Maybe NAUserAdministrative)
nAUserAdministrativeL f NAUser{..} = (\nAUserAdministrative -> NAUser { nAUserAdministrative, ..} ) <$> f nAUserAdministrative
{-# INLINE nAUserAdministrativeL #-}

-- | 'nAUserDateCreation' Lens
nAUserDateCreationL :: Lens_' NAUser (Maybe NADate)
nAUserDateCreationL f NAUser{..} = (\nAUserDateCreation -> NAUser { nAUserDateCreation, ..} ) <$> f nAUserDateCreation
{-# INLINE nAUserDateCreationL #-}

-- | 'nAUserDevices' Lens
nAUserDevicesL :: Lens_' NAUser (Maybe [Text])
nAUserDevicesL f NAUser{..} = (\nAUserDevices -> NAUser { nAUserDevices, ..} ) <$> f nAUserDevices
{-# INLINE nAUserDevicesL #-}

-- | 'nAUserFriendDevices' Lens
nAUserFriendDevicesL :: Lens_' NAUser (Maybe [Text])
nAUserFriendDevicesL f NAUser{..} = (\nAUserFriendDevices -> NAUser { nAUserFriendDevices, ..} ) <$> f nAUserFriendDevices
{-# INLINE nAUserFriendDevicesL #-}

-- | 'nAUserMail' Lens
nAUserMailL :: Lens_' NAUser (Maybe Text)
nAUserMailL f NAUser{..} = (\nAUserMail -> NAUser { nAUserMail, ..} ) <$> f nAUserMail
{-# INLINE nAUserMailL #-}

-- | 'nAUserTimelineNotRead' Lens
nAUserTimelineNotReadL :: Lens_' NAUser (Maybe Int)
nAUserTimelineNotReadL f NAUser{..} = (\nAUserTimelineNotRead -> NAUser { nAUserTimelineNotRead, ..} ) <$> f nAUserTimelineNotRead
{-# INLINE nAUserTimelineNotReadL #-}

-- | 'nAUserTimelineSize' Lens
nAUserTimelineSizeL :: Lens_' NAUser (Maybe Int)
nAUserTimelineSizeL f NAUser{..} = (\nAUserTimelineSize -> NAUser { nAUserTimelineSize, ..} ) <$> f nAUserTimelineSize
{-# INLINE nAUserTimelineSizeL #-}



-- * NAUserAdministrative

-- | 'nAUserAdministrativeCountry' Lens
nAUserAdministrativeCountryL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeCountryL f NAUserAdministrative{..} = (\nAUserAdministrativeCountry -> NAUserAdministrative { nAUserAdministrativeCountry, ..} ) <$> f nAUserAdministrativeCountry
{-# INLINE nAUserAdministrativeCountryL #-}

-- | 'nAUserAdministrativeLang' Lens
nAUserAdministrativeLangL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeLangL f NAUserAdministrative{..} = (\nAUserAdministrativeLang -> NAUserAdministrative { nAUserAdministrativeLang, ..} ) <$> f nAUserAdministrativeLang
{-# INLINE nAUserAdministrativeLangL #-}

-- | 'nAUserAdministrativeRegLocale' Lens
nAUserAdministrativeRegLocaleL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeRegLocaleL f NAUserAdministrative{..} = (\nAUserAdministrativeRegLocale -> NAUserAdministrative { nAUserAdministrativeRegLocale, ..} ) <$> f nAUserAdministrativeRegLocale
{-# INLINE nAUserAdministrativeRegLocaleL #-}

-- | 'nAUserAdministrativeUnit' Lens
nAUserAdministrativeUnitL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeUnitL f NAUserAdministrative{..} = (\nAUserAdministrativeUnit -> NAUserAdministrative { nAUserAdministrativeUnit, ..} ) <$> f nAUserAdministrativeUnit
{-# INLINE nAUserAdministrativeUnitL #-}

-- | 'nAUserAdministrativeWindunit' Lens
nAUserAdministrativeWindunitL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeWindunitL f NAUserAdministrative{..} = (\nAUserAdministrativeWindunit -> NAUserAdministrative { nAUserAdministrativeWindunit, ..} ) <$> f nAUserAdministrativeWindunit
{-# INLINE nAUserAdministrativeWindunitL #-}

-- | 'nAUserAdministrativePressureunit' Lens
nAUserAdministrativePressureunitL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativePressureunitL f NAUserAdministrative{..} = (\nAUserAdministrativePressureunit -> NAUserAdministrative { nAUserAdministrativePressureunit, ..} ) <$> f nAUserAdministrativePressureunit
{-# INLINE nAUserAdministrativePressureunitL #-}

-- | 'nAUserAdministrativeFeelLikeAlgo' Lens
nAUserAdministrativeFeelLikeAlgoL :: Lens_' NAUserAdministrative (Maybe Text)
nAUserAdministrativeFeelLikeAlgoL f NAUserAdministrative{..} = (\nAUserAdministrativeFeelLikeAlgo -> NAUserAdministrative { nAUserAdministrativeFeelLikeAlgo, ..} ) <$> f nAUserAdministrativeFeelLikeAlgo
{-# INLINE nAUserAdministrativeFeelLikeAlgoL #-}



-- * NAUserResponse

-- | 'nAUserResponseStatus' Lens
nAUserResponseStatusL :: Lens_' NAUserResponse (Maybe Text)
nAUserResponseStatusL f NAUserResponse{..} = (\nAUserResponseStatus -> NAUserResponse { nAUserResponseStatus, ..} ) <$> f nAUserResponseStatus
{-# INLINE nAUserResponseStatusL #-}

-- | 'nAUserResponseBody' Lens
nAUserResponseBodyL :: Lens_' NAUserResponse (Maybe NAUser)
nAUserResponseBodyL f NAUserResponse{..} = (\nAUserResponseBody -> NAUserResponse { nAUserResponseBody, ..} ) <$> f nAUserResponseBody
{-# INLINE nAUserResponseBodyL #-}

-- | 'nAUserResponseTimeExec' Lens
nAUserResponseTimeExecL :: Lens_' NAUserResponse (Maybe Double)
nAUserResponseTimeExecL f NAUserResponse{..} = (\nAUserResponseTimeExec -> NAUserResponse { nAUserResponseTimeExec, ..} ) <$> f nAUserResponseTimeExec
{-# INLINE nAUserResponseTimeExecL #-}

-- | 'nAUserResponseTimeServer' Lens
nAUserResponseTimeServerL :: Lens_' NAUserResponse (Maybe Int)
nAUserResponseTimeServerL f NAUserResponse{..} = (\nAUserResponseTimeServer -> NAUserResponse { nAUserResponseTimeServer, ..} ) <$> f nAUserResponseTimeServer
{-# INLINE nAUserResponseTimeServerL #-}



-- * NAWelcomeCamera

-- | 'nAWelcomeCameraId' Lens
nAWelcomeCameraIdL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraIdL f NAWelcomeCamera{..} = (\nAWelcomeCameraId -> NAWelcomeCamera { nAWelcomeCameraId, ..} ) <$> f nAWelcomeCameraId
{-# INLINE nAWelcomeCameraIdL #-}

-- | 'nAWelcomeCameraType' Lens
nAWelcomeCameraTypeL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraTypeL f NAWelcomeCamera{..} = (\nAWelcomeCameraType -> NAWelcomeCamera { nAWelcomeCameraType, ..} ) <$> f nAWelcomeCameraType
{-# INLINE nAWelcomeCameraTypeL #-}

-- | 'nAWelcomeCameraStatus' Lens
nAWelcomeCameraStatusL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraStatusL f NAWelcomeCamera{..} = (\nAWelcomeCameraStatus -> NAWelcomeCamera { nAWelcomeCameraStatus, ..} ) <$> f nAWelcomeCameraStatus
{-# INLINE nAWelcomeCameraStatusL #-}

-- | 'nAWelcomeCameraVpnUrl' Lens
nAWelcomeCameraVpnUrlL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraVpnUrlL f NAWelcomeCamera{..} = (\nAWelcomeCameraVpnUrl -> NAWelcomeCamera { nAWelcomeCameraVpnUrl, ..} ) <$> f nAWelcomeCameraVpnUrl
{-# INLINE nAWelcomeCameraVpnUrlL #-}

-- | 'nAWelcomeCameraIsLocal' Lens
nAWelcomeCameraIsLocalL :: Lens_' NAWelcomeCamera (Maybe Bool)
nAWelcomeCameraIsLocalL f NAWelcomeCamera{..} = (\nAWelcomeCameraIsLocal -> NAWelcomeCamera { nAWelcomeCameraIsLocal, ..} ) <$> f nAWelcomeCameraIsLocal
{-# INLINE nAWelcomeCameraIsLocalL #-}

-- | 'nAWelcomeCameraSdStatus' Lens
nAWelcomeCameraSdStatusL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraSdStatusL f NAWelcomeCamera{..} = (\nAWelcomeCameraSdStatus -> NAWelcomeCamera { nAWelcomeCameraSdStatus, ..} ) <$> f nAWelcomeCameraSdStatus
{-# INLINE nAWelcomeCameraSdStatusL #-}

-- | 'nAWelcomeCameraAlimStatus' Lens
nAWelcomeCameraAlimStatusL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraAlimStatusL f NAWelcomeCamera{..} = (\nAWelcomeCameraAlimStatus -> NAWelcomeCamera { nAWelcomeCameraAlimStatus, ..} ) <$> f nAWelcomeCameraAlimStatus
{-# INLINE nAWelcomeCameraAlimStatusL #-}

-- | 'nAWelcomeCameraName' Lens
nAWelcomeCameraNameL :: Lens_' NAWelcomeCamera (Maybe Text)
nAWelcomeCameraNameL f NAWelcomeCamera{..} = (\nAWelcomeCameraName -> NAWelcomeCamera { nAWelcomeCameraName, ..} ) <$> f nAWelcomeCameraName
{-# INLINE nAWelcomeCameraNameL #-}



-- * NAWelcomeEvent

-- | 'nAWelcomeEventId' Lens
nAWelcomeEventIdL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventIdL f NAWelcomeEvent{..} = (\nAWelcomeEventId -> NAWelcomeEvent { nAWelcomeEventId, ..} ) <$> f nAWelcomeEventId
{-# INLINE nAWelcomeEventIdL #-}

-- | 'nAWelcomeEventType' Lens
nAWelcomeEventTypeL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventTypeL f NAWelcomeEvent{..} = (\nAWelcomeEventType -> NAWelcomeEvent { nAWelcomeEventType, ..} ) <$> f nAWelcomeEventType
{-# INLINE nAWelcomeEventTypeL #-}

-- | 'nAWelcomeEventTime' Lens
nAWelcomeEventTimeL :: Lens_' NAWelcomeEvent (Maybe Int)
nAWelcomeEventTimeL f NAWelcomeEvent{..} = (\nAWelcomeEventTime -> NAWelcomeEvent { nAWelcomeEventTime, ..} ) <$> f nAWelcomeEventTime
{-# INLINE nAWelcomeEventTimeL #-}

-- | 'nAWelcomeEventCameraId' Lens
nAWelcomeEventCameraIdL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventCameraIdL f NAWelcomeEvent{..} = (\nAWelcomeEventCameraId -> NAWelcomeEvent { nAWelcomeEventCameraId, ..} ) <$> f nAWelcomeEventCameraId
{-# INLINE nAWelcomeEventCameraIdL #-}

-- | 'nAWelcomeEventPersonId' Lens
nAWelcomeEventPersonIdL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventPersonIdL f NAWelcomeEvent{..} = (\nAWelcomeEventPersonId -> NAWelcomeEvent { nAWelcomeEventPersonId, ..} ) <$> f nAWelcomeEventPersonId
{-# INLINE nAWelcomeEventPersonIdL #-}

-- | 'nAWelcomeEventSnapshot' Lens
nAWelcomeEventSnapshotL :: Lens_' NAWelcomeEvent (Maybe NAWelcomeSnapshot)
nAWelcomeEventSnapshotL f NAWelcomeEvent{..} = (\nAWelcomeEventSnapshot -> NAWelcomeEvent { nAWelcomeEventSnapshot, ..} ) <$> f nAWelcomeEventSnapshot
{-# INLINE nAWelcomeEventSnapshotL #-}

-- | 'nAWelcomeEventVideoId' Lens
nAWelcomeEventVideoIdL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventVideoIdL f NAWelcomeEvent{..} = (\nAWelcomeEventVideoId -> NAWelcomeEvent { nAWelcomeEventVideoId, ..} ) <$> f nAWelcomeEventVideoId
{-# INLINE nAWelcomeEventVideoIdL #-}

-- | 'nAWelcomeEventVideoStatus' Lens
nAWelcomeEventVideoStatusL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventVideoStatusL f NAWelcomeEvent{..} = (\nAWelcomeEventVideoStatus -> NAWelcomeEvent { nAWelcomeEventVideoStatus, ..} ) <$> f nAWelcomeEventVideoStatus
{-# INLINE nAWelcomeEventVideoStatusL #-}

-- | 'nAWelcomeEventIsArrival' Lens
nAWelcomeEventIsArrivalL :: Lens_' NAWelcomeEvent (Maybe Bool)
nAWelcomeEventIsArrivalL f NAWelcomeEvent{..} = (\nAWelcomeEventIsArrival -> NAWelcomeEvent { nAWelcomeEventIsArrival, ..} ) <$> f nAWelcomeEventIsArrival
{-# INLINE nAWelcomeEventIsArrivalL #-}

-- | 'nAWelcomeEventMessage' Lens
nAWelcomeEventMessageL :: Lens_' NAWelcomeEvent (Maybe Text)
nAWelcomeEventMessageL f NAWelcomeEvent{..} = (\nAWelcomeEventMessage -> NAWelcomeEvent { nAWelcomeEventMessage, ..} ) <$> f nAWelcomeEventMessage
{-# INLINE nAWelcomeEventMessageL #-}

-- | 'nAWelcomeEventSubType' Lens
nAWelcomeEventSubTypeL :: Lens_' NAWelcomeEvent (Maybe Int)
nAWelcomeEventSubTypeL f NAWelcomeEvent{..} = (\nAWelcomeEventSubType -> NAWelcomeEvent { nAWelcomeEventSubType, ..} ) <$> f nAWelcomeEventSubType
{-# INLINE nAWelcomeEventSubTypeL #-}



-- * NAWelcomeEventData

-- | 'nAWelcomeEventDataEventsList' Lens
nAWelcomeEventDataEventsListL :: Lens_' NAWelcomeEventData (Maybe [NAWelcomeEvent])
nAWelcomeEventDataEventsListL f NAWelcomeEventData{..} = (\nAWelcomeEventDataEventsList -> NAWelcomeEventData { nAWelcomeEventDataEventsList, ..} ) <$> f nAWelcomeEventDataEventsList
{-# INLINE nAWelcomeEventDataEventsListL #-}



-- * NAWelcomeEventResponse

-- | 'nAWelcomeEventResponseStatus' Lens
nAWelcomeEventResponseStatusL :: Lens_' NAWelcomeEventResponse (Maybe Text)
nAWelcomeEventResponseStatusL f NAWelcomeEventResponse{..} = (\nAWelcomeEventResponseStatus -> NAWelcomeEventResponse { nAWelcomeEventResponseStatus, ..} ) <$> f nAWelcomeEventResponseStatus
{-# INLINE nAWelcomeEventResponseStatusL #-}

-- | 'nAWelcomeEventResponseBody' Lens
nAWelcomeEventResponseBodyL :: Lens_' NAWelcomeEventResponse (Maybe NAWelcomeEventData)
nAWelcomeEventResponseBodyL f NAWelcomeEventResponse{..} = (\nAWelcomeEventResponseBody -> NAWelcomeEventResponse { nAWelcomeEventResponseBody, ..} ) <$> f nAWelcomeEventResponseBody
{-# INLINE nAWelcomeEventResponseBodyL #-}

-- | 'nAWelcomeEventResponseTimeExec' Lens
nAWelcomeEventResponseTimeExecL :: Lens_' NAWelcomeEventResponse (Maybe Double)
nAWelcomeEventResponseTimeExecL f NAWelcomeEventResponse{..} = (\nAWelcomeEventResponseTimeExec -> NAWelcomeEventResponse { nAWelcomeEventResponseTimeExec, ..} ) <$> f nAWelcomeEventResponseTimeExec
{-# INLINE nAWelcomeEventResponseTimeExecL #-}

-- | 'nAWelcomeEventResponseTimeServer' Lens
nAWelcomeEventResponseTimeServerL :: Lens_' NAWelcomeEventResponse (Maybe Int)
nAWelcomeEventResponseTimeServerL f NAWelcomeEventResponse{..} = (\nAWelcomeEventResponseTimeServer -> NAWelcomeEventResponse { nAWelcomeEventResponseTimeServer, ..} ) <$> f nAWelcomeEventResponseTimeServer
{-# INLINE nAWelcomeEventResponseTimeServerL #-}



-- * NAWelcomeFace

-- | 'nAWelcomeFaceId' Lens
nAWelcomeFaceIdL :: Lens_' NAWelcomeFace (Maybe Text)
nAWelcomeFaceIdL f NAWelcomeFace{..} = (\nAWelcomeFaceId -> NAWelcomeFace { nAWelcomeFaceId, ..} ) <$> f nAWelcomeFaceId
{-# INLINE nAWelcomeFaceIdL #-}

-- | 'nAWelcomeFaceVersion' Lens
nAWelcomeFaceVersionL :: Lens_' NAWelcomeFace (Maybe Int)
nAWelcomeFaceVersionL f NAWelcomeFace{..} = (\nAWelcomeFaceVersion -> NAWelcomeFace { nAWelcomeFaceVersion, ..} ) <$> f nAWelcomeFaceVersion
{-# INLINE nAWelcomeFaceVersionL #-}

-- | 'nAWelcomeFaceKey' Lens
nAWelcomeFaceKeyL :: Lens_' NAWelcomeFace (Maybe Text)
nAWelcomeFaceKeyL f NAWelcomeFace{..} = (\nAWelcomeFaceKey -> NAWelcomeFace { nAWelcomeFaceKey, ..} ) <$> f nAWelcomeFaceKey
{-# INLINE nAWelcomeFaceKeyL #-}



-- * NAWelcomeGlobalInfo

-- | 'nAWelcomeGlobalInfoShowTags' Lens
nAWelcomeGlobalInfoShowTagsL :: Lens_' NAWelcomeGlobalInfo (Maybe Bool)
nAWelcomeGlobalInfoShowTagsL f NAWelcomeGlobalInfo{..} = (\nAWelcomeGlobalInfoShowTags -> NAWelcomeGlobalInfo { nAWelcomeGlobalInfoShowTags, ..} ) <$> f nAWelcomeGlobalInfoShowTags
{-# INLINE nAWelcomeGlobalInfoShowTagsL #-}



-- * NAWelcomeHome

-- | 'nAWelcomeHomeId' Lens
nAWelcomeHomeIdL :: Lens_' NAWelcomeHome (Maybe Text)
nAWelcomeHomeIdL f NAWelcomeHome{..} = (\nAWelcomeHomeId -> NAWelcomeHome { nAWelcomeHomeId, ..} ) <$> f nAWelcomeHomeId
{-# INLINE nAWelcomeHomeIdL #-}

-- | 'nAWelcomeHomeName' Lens
nAWelcomeHomeNameL :: Lens_' NAWelcomeHome (Maybe Text)
nAWelcomeHomeNameL f NAWelcomeHome{..} = (\nAWelcomeHomeName -> NAWelcomeHome { nAWelcomeHomeName, ..} ) <$> f nAWelcomeHomeName
{-# INLINE nAWelcomeHomeNameL #-}

-- | 'nAWelcomeHomePersons' Lens
nAWelcomeHomePersonsL :: Lens_' NAWelcomeHome (Maybe [NAWelcomePerson])
nAWelcomeHomePersonsL f NAWelcomeHome{..} = (\nAWelcomeHomePersons -> NAWelcomeHome { nAWelcomeHomePersons, ..} ) <$> f nAWelcomeHomePersons
{-# INLINE nAWelcomeHomePersonsL #-}

-- | 'nAWelcomeHomePlace' Lens
nAWelcomeHomePlaceL :: Lens_' NAWelcomeHome (Maybe NAWelcomePlace)
nAWelcomeHomePlaceL f NAWelcomeHome{..} = (\nAWelcomeHomePlace -> NAWelcomeHome { nAWelcomeHomePlace, ..} ) <$> f nAWelcomeHomePlace
{-# INLINE nAWelcomeHomePlaceL #-}

-- | 'nAWelcomeHomeCameras' Lens
nAWelcomeHomeCamerasL :: Lens_' NAWelcomeHome (Maybe [NAWelcomeCamera])
nAWelcomeHomeCamerasL f NAWelcomeHome{..} = (\nAWelcomeHomeCameras -> NAWelcomeHome { nAWelcomeHomeCameras, ..} ) <$> f nAWelcomeHomeCameras
{-# INLINE nAWelcomeHomeCamerasL #-}

-- | 'nAWelcomeHomeEvents' Lens
nAWelcomeHomeEventsL :: Lens_' NAWelcomeHome (Maybe [NAWelcomeEvent])
nAWelcomeHomeEventsL f NAWelcomeHome{..} = (\nAWelcomeHomeEvents -> NAWelcomeHome { nAWelcomeHomeEvents, ..} ) <$> f nAWelcomeHomeEvents
{-# INLINE nAWelcomeHomeEventsL #-}

-- | 'nAWelcomeHomeModules' Lens
nAWelcomeHomeModulesL :: Lens_' NAWelcomeHome (Maybe [NAWelcomeModule])
nAWelcomeHomeModulesL f NAWelcomeHome{..} = (\nAWelcomeHomeModules -> NAWelcomeHome { nAWelcomeHomeModules, ..} ) <$> f nAWelcomeHomeModules
{-# INLINE nAWelcomeHomeModulesL #-}



-- * NAWelcomeHomeData

-- | 'nAWelcomeHomeDataHomes' Lens
nAWelcomeHomeDataHomesL :: Lens_' NAWelcomeHomeData (Maybe [NAWelcomeHome])
nAWelcomeHomeDataHomesL f NAWelcomeHomeData{..} = (\nAWelcomeHomeDataHomes -> NAWelcomeHomeData { nAWelcomeHomeDataHomes, ..} ) <$> f nAWelcomeHomeDataHomes
{-# INLINE nAWelcomeHomeDataHomesL #-}

-- | 'nAWelcomeHomeDataUser' Lens
nAWelcomeHomeDataUserL :: Lens_' NAWelcomeHomeData (Maybe NAWelcomeUser)
nAWelcomeHomeDataUserL f NAWelcomeHomeData{..} = (\nAWelcomeHomeDataUser -> NAWelcomeHomeData { nAWelcomeHomeDataUser, ..} ) <$> f nAWelcomeHomeDataUser
{-# INLINE nAWelcomeHomeDataUserL #-}

-- | 'nAWelcomeHomeDataGlobalInfo' Lens
nAWelcomeHomeDataGlobalInfoL :: Lens_' NAWelcomeHomeData (Maybe NAWelcomeGlobalInfo)
nAWelcomeHomeDataGlobalInfoL f NAWelcomeHomeData{..} = (\nAWelcomeHomeDataGlobalInfo -> NAWelcomeHomeData { nAWelcomeHomeDataGlobalInfo, ..} ) <$> f nAWelcomeHomeDataGlobalInfo
{-# INLINE nAWelcomeHomeDataGlobalInfoL #-}



-- * NAWelcomeHomeDataResponse

-- | 'nAWelcomeHomeDataResponseStatus' Lens
nAWelcomeHomeDataResponseStatusL :: Lens_' NAWelcomeHomeDataResponse (Maybe Text)
nAWelcomeHomeDataResponseStatusL f NAWelcomeHomeDataResponse{..} = (\nAWelcomeHomeDataResponseStatus -> NAWelcomeHomeDataResponse { nAWelcomeHomeDataResponseStatus, ..} ) <$> f nAWelcomeHomeDataResponseStatus
{-# INLINE nAWelcomeHomeDataResponseStatusL #-}

-- | 'nAWelcomeHomeDataResponseBody' Lens
nAWelcomeHomeDataResponseBodyL :: Lens_' NAWelcomeHomeDataResponse (Maybe NAWelcomeHomeData)
nAWelcomeHomeDataResponseBodyL f NAWelcomeHomeDataResponse{..} = (\nAWelcomeHomeDataResponseBody -> NAWelcomeHomeDataResponse { nAWelcomeHomeDataResponseBody, ..} ) <$> f nAWelcomeHomeDataResponseBody
{-# INLINE nAWelcomeHomeDataResponseBodyL #-}

-- | 'nAWelcomeHomeDataResponseTimeExec' Lens
nAWelcomeHomeDataResponseTimeExecL :: Lens_' NAWelcomeHomeDataResponse (Maybe Double)
nAWelcomeHomeDataResponseTimeExecL f NAWelcomeHomeDataResponse{..} = (\nAWelcomeHomeDataResponseTimeExec -> NAWelcomeHomeDataResponse { nAWelcomeHomeDataResponseTimeExec, ..} ) <$> f nAWelcomeHomeDataResponseTimeExec
{-# INLINE nAWelcomeHomeDataResponseTimeExecL #-}

-- | 'nAWelcomeHomeDataResponseTimeServer' Lens
nAWelcomeHomeDataResponseTimeServerL :: Lens_' NAWelcomeHomeDataResponse (Maybe Int)
nAWelcomeHomeDataResponseTimeServerL f NAWelcomeHomeDataResponse{..} = (\nAWelcomeHomeDataResponseTimeServer -> NAWelcomeHomeDataResponse { nAWelcomeHomeDataResponseTimeServer, ..} ) <$> f nAWelcomeHomeDataResponseTimeServer
{-# INLINE nAWelcomeHomeDataResponseTimeServerL #-}



-- * NAWelcomeModule

-- | 'nAWelcomeModuleId' Lens
nAWelcomeModuleIdL :: Lens_' NAWelcomeModule (Maybe Text)
nAWelcomeModuleIdL f NAWelcomeModule{..} = (\nAWelcomeModuleId -> NAWelcomeModule { nAWelcomeModuleId, ..} ) <$> f nAWelcomeModuleId
{-# INLINE nAWelcomeModuleIdL #-}

-- | 'nAWelcomeModuleType' Lens
nAWelcomeModuleTypeL :: Lens_' NAWelcomeModule (Maybe Text)
nAWelcomeModuleTypeL f NAWelcomeModule{..} = (\nAWelcomeModuleType -> NAWelcomeModule { nAWelcomeModuleType, ..} ) <$> f nAWelcomeModuleType
{-# INLINE nAWelcomeModuleTypeL #-}

-- | 'nAWelcomeModuleName' Lens
nAWelcomeModuleNameL :: Lens_' NAWelcomeModule (Maybe Text)
nAWelcomeModuleNameL f NAWelcomeModule{..} = (\nAWelcomeModuleName -> NAWelcomeModule { nAWelcomeModuleName, ..} ) <$> f nAWelcomeModuleName
{-# INLINE nAWelcomeModuleNameL #-}

-- | 'nAWelcomeModuleBatteryPercent' Lens
nAWelcomeModuleBatteryPercentL :: Lens_' NAWelcomeModule (Maybe Int)
nAWelcomeModuleBatteryPercentL f NAWelcomeModule{..} = (\nAWelcomeModuleBatteryPercent -> NAWelcomeModule { nAWelcomeModuleBatteryPercent, ..} ) <$> f nAWelcomeModuleBatteryPercent
{-# INLINE nAWelcomeModuleBatteryPercentL #-}

-- | 'nAWelcomeModuleStatus' Lens
nAWelcomeModuleStatusL :: Lens_' NAWelcomeModule (Maybe Text)
nAWelcomeModuleStatusL f NAWelcomeModule{..} = (\nAWelcomeModuleStatus -> NAWelcomeModule { nAWelcomeModuleStatus, ..} ) <$> f nAWelcomeModuleStatus
{-# INLINE nAWelcomeModuleStatusL #-}

-- | 'nAWelcomeModuleRf' Lens
nAWelcomeModuleRfL :: Lens_' NAWelcomeModule (Maybe Text)
nAWelcomeModuleRfL f NAWelcomeModule{..} = (\nAWelcomeModuleRf -> NAWelcomeModule { nAWelcomeModuleRf, ..} ) <$> f nAWelcomeModuleRf
{-# INLINE nAWelcomeModuleRfL #-}

-- | 'nAWelcomeModuleLastActivity' Lens
nAWelcomeModuleLastActivityL :: Lens_' NAWelcomeModule (Maybe Int)
nAWelcomeModuleLastActivityL f NAWelcomeModule{..} = (\nAWelcomeModuleLastActivity -> NAWelcomeModule { nAWelcomeModuleLastActivity, ..} ) <$> f nAWelcomeModuleLastActivity
{-# INLINE nAWelcomeModuleLastActivityL #-}



-- * NAWelcomePerson

-- | 'nAWelcomePersonId' Lens
nAWelcomePersonIdL :: Lens_' NAWelcomePerson (Maybe Text)
nAWelcomePersonIdL f NAWelcomePerson{..} = (\nAWelcomePersonId -> NAWelcomePerson { nAWelcomePersonId, ..} ) <$> f nAWelcomePersonId
{-# INLINE nAWelcomePersonIdL #-}

-- | 'nAWelcomePersonLastSeen' Lens
nAWelcomePersonLastSeenL :: Lens_' NAWelcomePerson (Maybe Int)
nAWelcomePersonLastSeenL f NAWelcomePerson{..} = (\nAWelcomePersonLastSeen -> NAWelcomePerson { nAWelcomePersonLastSeen, ..} ) <$> f nAWelcomePersonLastSeen
{-# INLINE nAWelcomePersonLastSeenL #-}

-- | 'nAWelcomePersonOutOfSight' Lens
nAWelcomePersonOutOfSightL :: Lens_' NAWelcomePerson (Maybe Bool)
nAWelcomePersonOutOfSightL f NAWelcomePerson{..} = (\nAWelcomePersonOutOfSight -> NAWelcomePerson { nAWelcomePersonOutOfSight, ..} ) <$> f nAWelcomePersonOutOfSight
{-# INLINE nAWelcomePersonOutOfSightL #-}

-- | 'nAWelcomePersonFace' Lens
nAWelcomePersonFaceL :: Lens_' NAWelcomePerson (Maybe NAWelcomeFace)
nAWelcomePersonFaceL f NAWelcomePerson{..} = (\nAWelcomePersonFace -> NAWelcomePerson { nAWelcomePersonFace, ..} ) <$> f nAWelcomePersonFace
{-# INLINE nAWelcomePersonFaceL #-}

-- | 'nAWelcomePersonPseudo' Lens
nAWelcomePersonPseudoL :: Lens_' NAWelcomePerson (Maybe Text)
nAWelcomePersonPseudoL f NAWelcomePerson{..} = (\nAWelcomePersonPseudo -> NAWelcomePerson { nAWelcomePersonPseudo, ..} ) <$> f nAWelcomePersonPseudo
{-# INLINE nAWelcomePersonPseudoL #-}



-- * NAWelcomePersonsAwayResponse

-- | 'nAWelcomePersonsAwayResponseStatus' Lens
nAWelcomePersonsAwayResponseStatusL :: Lens_' NAWelcomePersonsAwayResponse (Maybe Text)
nAWelcomePersonsAwayResponseStatusL f NAWelcomePersonsAwayResponse{..} = (\nAWelcomePersonsAwayResponseStatus -> NAWelcomePersonsAwayResponse { nAWelcomePersonsAwayResponseStatus, ..} ) <$> f nAWelcomePersonsAwayResponseStatus
{-# INLINE nAWelcomePersonsAwayResponseStatusL #-}

-- | 'nAWelcomePersonsAwayResponseTimeExec' Lens
nAWelcomePersonsAwayResponseTimeExecL :: Lens_' NAWelcomePersonsAwayResponse (Maybe Double)
nAWelcomePersonsAwayResponseTimeExecL f NAWelcomePersonsAwayResponse{..} = (\nAWelcomePersonsAwayResponseTimeExec -> NAWelcomePersonsAwayResponse { nAWelcomePersonsAwayResponseTimeExec, ..} ) <$> f nAWelcomePersonsAwayResponseTimeExec
{-# INLINE nAWelcomePersonsAwayResponseTimeExecL #-}

-- | 'nAWelcomePersonsAwayResponseTimeServer' Lens
nAWelcomePersonsAwayResponseTimeServerL :: Lens_' NAWelcomePersonsAwayResponse (Maybe Int)
nAWelcomePersonsAwayResponseTimeServerL f NAWelcomePersonsAwayResponse{..} = (\nAWelcomePersonsAwayResponseTimeServer -> NAWelcomePersonsAwayResponse { nAWelcomePersonsAwayResponseTimeServer, ..} ) <$> f nAWelcomePersonsAwayResponseTimeServer
{-# INLINE nAWelcomePersonsAwayResponseTimeServerL #-}



-- * NAWelcomePersonsHomeResponse

-- | 'nAWelcomePersonsHomeResponseStatus' Lens
nAWelcomePersonsHomeResponseStatusL :: Lens_' NAWelcomePersonsHomeResponse (Maybe Text)
nAWelcomePersonsHomeResponseStatusL f NAWelcomePersonsHomeResponse{..} = (\nAWelcomePersonsHomeResponseStatus -> NAWelcomePersonsHomeResponse { nAWelcomePersonsHomeResponseStatus, ..} ) <$> f nAWelcomePersonsHomeResponseStatus
{-# INLINE nAWelcomePersonsHomeResponseStatusL #-}

-- | 'nAWelcomePersonsHomeResponseTimeExec' Lens
nAWelcomePersonsHomeResponseTimeExecL :: Lens_' NAWelcomePersonsHomeResponse (Maybe Double)
nAWelcomePersonsHomeResponseTimeExecL f NAWelcomePersonsHomeResponse{..} = (\nAWelcomePersonsHomeResponseTimeExec -> NAWelcomePersonsHomeResponse { nAWelcomePersonsHomeResponseTimeExec, ..} ) <$> f nAWelcomePersonsHomeResponseTimeExec
{-# INLINE nAWelcomePersonsHomeResponseTimeExecL #-}

-- | 'nAWelcomePersonsHomeResponseTimeServer' Lens
nAWelcomePersonsHomeResponseTimeServerL :: Lens_' NAWelcomePersonsHomeResponse (Maybe Int)
nAWelcomePersonsHomeResponseTimeServerL f NAWelcomePersonsHomeResponse{..} = (\nAWelcomePersonsHomeResponseTimeServer -> NAWelcomePersonsHomeResponse { nAWelcomePersonsHomeResponseTimeServer, ..} ) <$> f nAWelcomePersonsHomeResponseTimeServer
{-# INLINE nAWelcomePersonsHomeResponseTimeServerL #-}



-- * NAWelcomePlace

-- | 'nAWelcomePlaceCity' Lens
nAWelcomePlaceCityL :: Lens_' NAWelcomePlace (Maybe Text)
nAWelcomePlaceCityL f NAWelcomePlace{..} = (\nAWelcomePlaceCity -> NAWelcomePlace { nAWelcomePlaceCity, ..} ) <$> f nAWelcomePlaceCity
{-# INLINE nAWelcomePlaceCityL #-}

-- | 'nAWelcomePlaceCountry' Lens
nAWelcomePlaceCountryL :: Lens_' NAWelcomePlace (Maybe Text)
nAWelcomePlaceCountryL f NAWelcomePlace{..} = (\nAWelcomePlaceCountry -> NAWelcomePlace { nAWelcomePlaceCountry, ..} ) <$> f nAWelcomePlaceCountry
{-# INLINE nAWelcomePlaceCountryL #-}

-- | 'nAWelcomePlaceTimezone' Lens
nAWelcomePlaceTimezoneL :: Lens_' NAWelcomePlace (Maybe Text)
nAWelcomePlaceTimezoneL f NAWelcomePlace{..} = (\nAWelcomePlaceTimezone -> NAWelcomePlace { nAWelcomePlaceTimezone, ..} ) <$> f nAWelcomePlaceTimezone
{-# INLINE nAWelcomePlaceTimezoneL #-}



-- * NAWelcomeSnapshot

-- | 'nAWelcomeSnapshotId' Lens
nAWelcomeSnapshotIdL :: Lens_' NAWelcomeSnapshot (Maybe Text)
nAWelcomeSnapshotIdL f NAWelcomeSnapshot{..} = (\nAWelcomeSnapshotId -> NAWelcomeSnapshot { nAWelcomeSnapshotId, ..} ) <$> f nAWelcomeSnapshotId
{-# INLINE nAWelcomeSnapshotIdL #-}

-- | 'nAWelcomeSnapshotVersion' Lens
nAWelcomeSnapshotVersionL :: Lens_' NAWelcomeSnapshot (Maybe Int)
nAWelcomeSnapshotVersionL f NAWelcomeSnapshot{..} = (\nAWelcomeSnapshotVersion -> NAWelcomeSnapshot { nAWelcomeSnapshotVersion, ..} ) <$> f nAWelcomeSnapshotVersion
{-# INLINE nAWelcomeSnapshotVersionL #-}

-- | 'nAWelcomeSnapshotKey' Lens
nAWelcomeSnapshotKeyL :: Lens_' NAWelcomeSnapshot (Maybe Text)
nAWelcomeSnapshotKeyL f NAWelcomeSnapshot{..} = (\nAWelcomeSnapshotKey -> NAWelcomeSnapshot { nAWelcomeSnapshotKey, ..} ) <$> f nAWelcomeSnapshotKey
{-# INLINE nAWelcomeSnapshotKeyL #-}



-- * NAWelcomeUser

-- | 'nAWelcomeUserLang' Lens
nAWelcomeUserLangL :: Lens_' NAWelcomeUser (Maybe Text)
nAWelcomeUserLangL f NAWelcomeUser{..} = (\nAWelcomeUserLang -> NAWelcomeUser { nAWelcomeUserLang, ..} ) <$> f nAWelcomeUserLang
{-# INLINE nAWelcomeUserLangL #-}

-- | 'nAWelcomeUserRegLocale' Lens
nAWelcomeUserRegLocaleL :: Lens_' NAWelcomeUser (Maybe Text)
nAWelcomeUserRegLocaleL f NAWelcomeUser{..} = (\nAWelcomeUserRegLocale -> NAWelcomeUser { nAWelcomeUserRegLocale, ..} ) <$> f nAWelcomeUserRegLocale
{-# INLINE nAWelcomeUserRegLocaleL #-}



-- * NAWelcomeWebhookResponse

-- | 'nAWelcomeWebhookResponseStatus' Lens
nAWelcomeWebhookResponseStatusL :: Lens_' NAWelcomeWebhookResponse (Maybe Text)
nAWelcomeWebhookResponseStatusL f NAWelcomeWebhookResponse{..} = (\nAWelcomeWebhookResponseStatus -> NAWelcomeWebhookResponse { nAWelcomeWebhookResponseStatus, ..} ) <$> f nAWelcomeWebhookResponseStatus
{-# INLINE nAWelcomeWebhookResponseStatusL #-}

-- | 'nAWelcomeWebhookResponseTimeExec' Lens
nAWelcomeWebhookResponseTimeExecL :: Lens_' NAWelcomeWebhookResponse (Maybe Double)
nAWelcomeWebhookResponseTimeExecL f NAWelcomeWebhookResponse{..} = (\nAWelcomeWebhookResponseTimeExec -> NAWelcomeWebhookResponse { nAWelcomeWebhookResponseTimeExec, ..} ) <$> f nAWelcomeWebhookResponseTimeExec
{-# INLINE nAWelcomeWebhookResponseTimeExecL #-}



-- * NAYearMonth

-- | 'nAYearMonthY' Lens
nAYearMonthYL :: Lens_' NAYearMonth (Maybe Int)
nAYearMonthYL f NAYearMonth{..} = (\nAYearMonthY -> NAYearMonth { nAYearMonthY, ..} ) <$> f nAYearMonthY
{-# INLINE nAYearMonthYL #-}

-- | 'nAYearMonthM' Lens
nAYearMonthML :: Lens_' NAYearMonth (Maybe Int)
nAYearMonthML f NAYearMonth{..} = (\nAYearMonthM -> NAYearMonth { nAYearMonthM, ..} ) <$> f nAYearMonthM
{-# INLINE nAYearMonthML #-}



-- * NAZone

-- | 'nAZoneId' Lens
nAZoneIdL :: Lens_' NAZone (Maybe Int)
nAZoneIdL f NAZone{..} = (\nAZoneId -> NAZone { nAZoneId, ..} ) <$> f nAZoneId
{-# INLINE nAZoneIdL #-}

-- | 'nAZoneType' Lens
nAZoneTypeL :: Lens_' NAZone (Maybe Int)
nAZoneTypeL f NAZone{..} = (\nAZoneType -> NAZone { nAZoneType, ..} ) <$> f nAZoneType
{-# INLINE nAZoneTypeL #-}

-- | 'nAZoneName' Lens
nAZoneNameL :: Lens_' NAZone (Maybe Text)
nAZoneNameL f NAZone{..} = (\nAZoneName -> NAZone { nAZoneName, ..} ) <$> f nAZoneName
{-# INLINE nAZoneNameL #-}

-- | 'nAZoneTemp' Lens
nAZoneTempL :: Lens_' NAZone (Maybe Float)
nAZoneTempL f NAZone{..} = (\nAZoneTemp -> NAZone { nAZoneTemp, ..} ) <$> f nAZoneTemp
{-# INLINE nAZoneTempL #-}


