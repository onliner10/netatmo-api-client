{-
   Netatmo

   <h3>Welcome to the Netatmo swagger on-line documentation !</h3> This site is a complement to the official <a href=\"https://dev.netatmo.com/\">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the \"try it\" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href=\"https://github.com/cbornet/netatmo-swagger-ui\">netatmo-swagger-ui</a>. You can also use the online <a href=\"./swagger.json\">swagger declaration</a> file to generate code or static documentation (see <a href=\"https://github.com/cbornet/netatmo-swagger-api\">netatmo-swagger-api</a>). 

   OpenAPI Version: 3.0.1
   Netatmo API version: 1.1.3
   Contact: contact-api@netatmo.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Netatmo.API.Healthyhomecoach
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Netatmo.API.Healthyhomecoach where

import Netatmo.Core
import Netatmo.MimeTypes
import Netatmo.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Healthyhomecoach

-- *** gethomecoachsdata

-- | @GET \/gethomecoachsdata@
-- 
-- The method gethomecoachsdata Returns data from a user Healthy Home Coach Station (measures and device specific data).
-- 
-- AuthMethod: 'AuthOAuthCodeOauth', 'AuthOAuthPasswordOauth'
-- 
gethomecoachsdata
  :: NetatmoRequest Gethomecoachsdata MimeNoContent NAHealthyHomeCoachDataResponse MimeJSON
gethomecoachsdata =
  _mkRequest "GET" ["/gethomecoachsdata"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthCodeOauth)
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthPasswordOauth)

data Gethomecoachsdata  

-- | /Optional Param/ "device_id" - Id of the device you want to retrieve information of
instance HasOptionalParam Gethomecoachsdata DeviceId where
  applyOptionalParam req (DeviceId xs) =
    req `addQuery` toQuery ("device_id", Just xs)
-- | @application/json@
instance Produces Gethomecoachsdata MimeJSON

